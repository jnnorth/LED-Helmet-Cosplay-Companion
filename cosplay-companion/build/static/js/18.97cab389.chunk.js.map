{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-avatar_3.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-5641d27f.js"],"names":["Avatar","hostRef","registerInstance","this","prototype","render","h","Host","class","getIonMode","style","ios","md","Badge","_a","mode","createColorClasses","color","Thumbnail","hostContext","selector","el","closest","cssClassMap","length","Object","assign","getClassMap","classes","map","undefined","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","ev","direction","animation","__awaiter","router","__generator","test","document","querySelector","preventDefault","push"],"mappings":"+HAAA,sKAKIA,EAAwB,WACxB,SAASA,EAAOC,GACZC,YAAiBC,KAAMF,GAK3B,OAHAD,EAAOI,UAAUC,OAAS,WACtB,OAAQC,YAAEC,IAAM,CAAEC,MAAOC,YAAWN,OAASG,YAAE,OAAQ,QAEpDN,EAPiB,GAS5BA,EAAOU,MAAQ,CACXC,IAZe,4PAafC,GAZc,6PAclB,IAEIC,EAAuB,WACvB,SAASA,EAAMZ,GACXC,YAAiBC,KAAMF,GAS3B,OAPAY,EAAMT,UAAUC,OAAS,WACrB,IAAIS,EACAC,EAAON,YAAWN,MACtB,OAAQG,YAAEC,IAAM,CAAEC,MAAOQ,YAAmBb,KAAKc,OAAQH,EAAK,GACtDA,EAAGC,IAAQ,EACXD,KAAQR,YAAE,OAAQ,QAEvBO,EAXgB,GAa3BA,EAAMH,MAAQ,CACVC,IAhBc,kjCAiBdC,GAhBa,+nCAkBjB,IACIM,EAA2B,WAC3B,SAASA,EAAUjB,GACfC,YAAiBC,KAAMF,GAK3B,OAHAiB,EAAUd,UAAUC,OAAS,WACzB,OAAQC,YAAEC,IAAM,CAAEC,MAAOC,YAAWN,OAASG,YAAE,OAAQ,QAEpDY,EAPoB,GAS/BA,EAAUR,MAVS,+Q,iCCrCnB,mJACIS,EAAc,SAAUC,EAAUC,GAClC,OAAgC,OAAzBA,EAAGC,QAAQF,IAKlBJ,EAAqB,SAAUC,EAAOM,GACtC,IAAIT,EACJ,MAAyB,kBAAVG,GAAsBA,EAAMO,OAAS,EAAKC,OAAOC,SAAQZ,EAAK,CAAE,aAAa,IAAW,aAAeG,IAAS,EAAMH,GAAKS,GAAeA,GAYzJI,EAAc,SAAUC,GACxB,IAAIC,EAAM,GAEV,OAbe,SAAUD,GACzB,YAAgBE,IAAZF,GACYG,MAAMC,QAAQJ,GAAWA,EAAUA,EAAQK,MAAM,MAExDC,QAAO,SAAUC,GAAK,OAAY,MAALA,KAC7BN,KAAI,SAAUM,GAAK,OAAOA,EAAEC,UAC5BF,QAAO,SAAUC,GAAK,MAAa,KAANA,KAE/B,GAIPE,CAAaT,GAASU,SAAQ,SAAUH,GAAK,OAAON,EAAIM,IAAK,KACtDN,GAEPU,EAAS,uBACTC,EAAU,SAAUC,EAAKC,EAAIC,EAAWC,GAAa,OAAOC,iBAAU,OAAQ,OAAQ,GAAQ,WAC9F,IAAIC,EACJ,OAAOC,YAAY5C,MAAM,SAAUW,GAC/B,OAAW,MAAP2B,GAA0B,MAAXA,EAAI,KAAeF,EAAOS,KAAKP,KAC9CK,EAASG,SAASC,cAAc,gBAElB,MAANR,GACAA,EAAGS,iBAEA,CAAC,EAAcL,EAAOM,KAAKX,EAAKE,EAAWC,KAGnD,CAAC,GAAc","file":"static/js/18.97cab389.chunk.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-92848855.js';\r\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\r\nimport { c as createColorClasses } from './theme-5641d27f.js';\r\nvar avatarIosCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:48px;height:48px}\";\r\nvar avatarMdCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:64px;height:64px}\";\r\nvar Avatar = /** @class */ (function () {\r\n    function Avatar(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    Avatar.prototype.render = function () {\r\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\r\n    };\r\n    return Avatar;\r\n}());\r\nAvatar.style = {\r\n    ios: avatarIosCss,\r\n    md: avatarMdCss\r\n};\r\nvar badgeIosCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{border-radius:10px}\";\r\nvar badgeMdCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{--padding-top:3px;--padding-end:4px;--padding-bottom:4px;--padding-start:4px;border-radius:4px}\";\r\nvar Badge = /** @class */ (function () {\r\n    function Badge(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    Badge.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        return (h(Host, { class: createColorClasses(this.color, (_a = {},\r\n                _a[mode] = true,\r\n                _a)) }, h(\"slot\", null)));\r\n    };\r\n    return Badge;\r\n}());\r\nBadge.style = {\r\n    ios: badgeIosCss,\r\n    md: badgeMdCss\r\n};\r\nvar thumbnailCss = \":host{--size:48px;--border-radius:0;border-radius:var(--border-radius);display:block;width:var(--size);height:var(--size)}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}\";\r\nvar Thumbnail = /** @class */ (function () {\r\n    function Thumbnail(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    Thumbnail.prototype.render = function () {\r\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\r\n    };\r\n    return Thumbnail;\r\n}());\r\nThumbnail.style = thumbnailCss;\r\nexport { Avatar as ion_avatar, Badge as ion_badge, Thumbnail as ion_thumbnail };\r\n","import { __awaiter, __generator } from \"tslib\";\r\nvar hostContext = function (selector, el) {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nvar createColorClasses = function (color, cssClassMap) {\r\n    var _a;\r\n    return (typeof color === 'string' && color.length > 0) ? Object.assign((_a = { 'ion-color': true }, _a[\"ion-color-\" + color] = true, _a), cssClassMap) : cssClassMap;\r\n};\r\nvar getClassList = function (classes) {\r\n    if (classes !== undefined) {\r\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(function (c) { return c != null; })\r\n            .map(function (c) { return c.trim(); })\r\n            .filter(function (c) { return c !== ''; });\r\n    }\r\n    return [];\r\n};\r\nvar getClassMap = function (classes) {\r\n    var map = {};\r\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\r\n    return map;\r\n};\r\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nvar openURL = function (url, ev, direction, animation) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var router;\r\n    return __generator(this, function (_a) {\r\n        if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n            router = document.querySelector('ion-router');\r\n            if (router) {\r\n                if (ev != null) {\r\n                    ev.preventDefault();\r\n                }\r\n                return [2 /*return*/, router.push(url, direction, animation)];\r\n            }\r\n        }\r\n        return [2 /*return*/, false];\r\n    });\r\n}); };\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n"],"sourceRoot":""}