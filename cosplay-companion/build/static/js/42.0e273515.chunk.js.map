{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/input-shims-ba28b23a.js"],"names":["cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","appendChild","set","tx","ownerDocument","dir","style","pointerEvents","transform","clone","get","delete","remove","SKIP_SELECTOR","calcScrollData","inputRect","contentRect","keyboardHeight","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","safeAreaTop","distanceToBottom","Math","min","distanceToTop","desiredScrollAmount","round","scrollAmount","duration","abs","scrollDuration","max","scrollPadding","inputSafeY","jsSetFocus","contentEl","footerEl","__awaiter","scrollData","scrollContentTimeout_1","scrollContent_1","doubleKeyboardEventListener_1","scrollEl","totalScrollAmount","__generator","this","_a","label","itemEl","closest","getBoundingClientRect","defaultView","innerHeight","getScrollData","focus","window","undefined","clearTimeout","removeEventListener","scrollByPoint","sent","addEventListener","getScrollElement","scrollHeight","clientHeight","scrollTop","type","setTimeout","hasPointerMoved","threshold","startCoord","endCoord","deltaX","x","deltaY","y","setScrollPadding","tagName","parentElement","el","timer","setProperty","startInputShims","config","doc","document","getNumber","scrollAssist","getBoolean","hideCaret","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","inputRoot","rmFn","componentOnReady","shadowRoot","querySelector","scrollHideCaret","shouldHideCaret","onBlur","showCaret","enableHideCaretOnScroll","coord","touchStart","ev","pointerCoord","touchEnd","preventDefault","stopPropagation","enableScrollAssist","focused","didScroll","onScroll","onFocusin","onTouchend","active","matches","tapped","target","blur","enableInputBlurring","onFocusout","enableScrollPadding","_i","inputs_1","length","detail","fn","unregisterInput"],"mappings":"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","file":"static/js/42.0e273515.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport { a as addEventListener, b as removeEventListener, p as pointerCoord } from './helpers-47d562d2.js';\r\nvar cloneMap = new WeakMap();\r\nvar relocateInput = function (componentEl, inputEl, shouldRelocate, inputRelativeY) {\r\n    if (inputRelativeY === void 0) { inputRelativeY = 0; }\r\n    if (cloneMap.has(componentEl) === shouldRelocate) {\r\n        return;\r\n    }\r\n    if (shouldRelocate) {\r\n        addClone(componentEl, inputEl, inputRelativeY);\r\n    }\r\n    else {\r\n        removeClone(componentEl, inputEl);\r\n    }\r\n};\r\nvar isFocused = function (input) {\r\n    return input === input.getRootNode().activeElement;\r\n};\r\nvar addClone = function (componentEl, inputEl, inputRelativeY) {\r\n    // this allows for the actual input to receive the focus from\r\n    // the user's touch event, but before it receives focus, it\r\n    // moves the actual input to a location that will not screw\r\n    // up the app's layout, and does not allow the native browser\r\n    // to attempt to scroll the input into place (messing up headers/footers)\r\n    // the cloned input fills the area of where native input should be\r\n    // while the native input fakes out the browser by relocating itself\r\n    // before it receives the actual focus event\r\n    // We hide the focused input (with the visible caret) invisible by making it scale(0),\r\n    var parentEl = inputEl.parentNode;\r\n    // DOM WRITES\r\n    var clonedEl = inputEl.cloneNode(false);\r\n    clonedEl.classList.add('cloned-input');\r\n    clonedEl.tabIndex = -1;\r\n    parentEl.appendChild(clonedEl);\r\n    cloneMap.set(componentEl, clonedEl);\r\n    var doc = componentEl.ownerDocument;\r\n    var tx = doc.dir === 'rtl' ? 9999 : -9999;\r\n    componentEl.style.pointerEvents = 'none';\r\n    inputEl.style.transform = \"translate3d(\" + tx + \"px,\" + inputRelativeY + \"px,0) scale(0)\";\r\n};\r\nvar removeClone = function (componentEl, inputEl) {\r\n    var clone = cloneMap.get(componentEl);\r\n    if (clone) {\r\n        cloneMap.delete(componentEl);\r\n        clone.remove();\r\n    }\r\n    componentEl.style.pointerEvents = '';\r\n    inputEl.style.transform = '';\r\n};\r\nvar enableHideCaretOnScroll = function (componentEl, inputEl, scrollEl) {\r\n    if (!scrollEl || !inputEl) {\r\n        return function () { return; };\r\n    }\r\n    var scrollHideCaret = function (shouldHideCaret) {\r\n        if (isFocused(inputEl)) {\r\n            relocateInput(componentEl, inputEl, shouldHideCaret);\r\n        }\r\n    };\r\n    var onBlur = function () { return relocateInput(componentEl, inputEl, false); };\r\n    var hideCaret = function () { return scrollHideCaret(true); };\r\n    var showCaret = function () { return scrollHideCaret(false); };\r\n    addEventListener(scrollEl, 'ionScrollStart', hideCaret);\r\n    addEventListener(scrollEl, 'ionScrollEnd', showCaret);\r\n    inputEl.addEventListener('blur', onBlur);\r\n    return function () {\r\n        removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\r\n        removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\r\n        inputEl.addEventListener('ionBlur', onBlur);\r\n    };\r\n};\r\nvar SKIP_SELECTOR = 'input, textarea, [no-blur]';\r\nvar enableInputBlurring = function () {\r\n    var focused = true;\r\n    var didScroll = false;\r\n    var doc = document;\r\n    var onScroll = function () {\r\n        didScroll = true;\r\n    };\r\n    var onFocusin = function () {\r\n        focused = true;\r\n    };\r\n    var onTouchend = function (ev) {\r\n        // if app did scroll return early\r\n        if (didScroll) {\r\n            didScroll = false;\r\n            return;\r\n        }\r\n        var active = doc.activeElement;\r\n        if (!active) {\r\n            return;\r\n        }\r\n        // only blur if the active element is a text-input or a textarea\r\n        if (active.matches(SKIP_SELECTOR)) {\r\n            return;\r\n        }\r\n        // if the selected target is the active element, do not blur\r\n        var tapped = ev.target;\r\n        if (tapped === active) {\r\n            return;\r\n        }\r\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\r\n            return;\r\n        }\r\n        focused = false;\r\n        // TODO: find a better way, why 50ms?\r\n        setTimeout(function () {\r\n            if (!focused) {\r\n                active.blur();\r\n            }\r\n        }, 50);\r\n    };\r\n    addEventListener(doc, 'ionScrollStart', onScroll);\r\n    doc.addEventListener('focusin', onFocusin, true);\r\n    doc.addEventListener('touchend', onTouchend, false);\r\n    return function () {\r\n        removeEventListener(doc, 'ionScrollStart', onScroll, true);\r\n        doc.removeEventListener('focusin', onFocusin, true);\r\n        doc.removeEventListener('touchend', onTouchend, false);\r\n    };\r\n};\r\nvar SCROLL_ASSIST_SPEED = 0.3;\r\nvar getScrollData = function (componentEl, contentEl, keyboardHeight) {\r\n    var itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\r\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\r\n};\r\nvar calcScrollData = function (inputRect, contentRect, keyboardHeight, platformHeight) {\r\n    // compute input's Y values relative to the body\r\n    var inputTop = inputRect.top;\r\n    var inputBottom = inputRect.bottom;\r\n    // compute visible area\r\n    var visibleAreaTop = contentRect.top;\r\n    var visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\r\n    // compute safe area\r\n    var safeAreaTop = visibleAreaTop + 15;\r\n    var safeAreaBottom = visibleAreaBottom * 0.75;\r\n    // figure out if each edge of the input is within the safe area\r\n    var distanceToBottom = safeAreaBottom - inputBottom;\r\n    var distanceToTop = safeAreaTop - inputTop;\r\n    // desiredScrollAmount is the negated distance to the safe area according to our calculations.\r\n    var desiredScrollAmount = Math.round((distanceToBottom < 0)\r\n        ? -distanceToBottom\r\n        : (distanceToTop > 0)\r\n            ? -distanceToTop\r\n            : 0);\r\n    // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\r\n    // gets focus, so make sure we don't scroll the input above the visible area\r\n    var scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\r\n    var distance = Math.abs(scrollAmount);\r\n    var duration = distance / SCROLL_ASSIST_SPEED;\r\n    var scrollDuration = Math.min(400, Math.max(150, duration));\r\n    return {\r\n        scrollAmount: scrollAmount,\r\n        scrollDuration: scrollDuration,\r\n        scrollPadding: keyboardHeight,\r\n        inputSafeY: -(inputTop - safeAreaTop) + 4\r\n    };\r\n};\r\nvar enableScrollAssist = function (componentEl, inputEl, contentEl, footerEl, keyboardHeight) {\r\n    var coord;\r\n    var touchStart = function (ev) {\r\n        coord = pointerCoord(ev);\r\n    };\r\n    var touchEnd = function (ev) {\r\n        // input cover touchend/mouseup\r\n        if (!coord) {\r\n            return;\r\n        }\r\n        // get where the touchend/mouseup ended\r\n        var endCoord = pointerCoord(ev);\r\n        // focus this input if the pointer hasn't moved XX pixels\r\n        // and the input doesn't already have focus\r\n        if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            // begin the input focus process\r\n            jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\r\n        }\r\n    };\r\n    componentEl.addEventListener('touchstart', touchStart, true);\r\n    componentEl.addEventListener('touchend', touchEnd, true);\r\n    return function () {\r\n        componentEl.removeEventListener('touchstart', touchStart, true);\r\n        componentEl.removeEventListener('touchend', touchEnd, true);\r\n    };\r\n};\r\nvar jsSetFocus = function (componentEl, inputEl, contentEl, footerEl, keyboardHeight) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var scrollData, scrollContentTimeout_1, scrollContent_1, doubleKeyboardEventListener_1, scrollEl, totalScrollAmount;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (!contentEl && !footerEl) {\r\n                    return [2 /*return*/];\r\n                }\r\n                scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\r\n                if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\r\n                    // the text input is in a safe position that doesn't\r\n                    // require it to be scrolled into view, just set focus now\r\n                    inputEl.focus();\r\n                    return [2 /*return*/];\r\n                }\r\n                // temporarily move the focus to the focus holder so the browser\r\n                // doesn't freak out while it's trying to get the input in place\r\n                // at this point the native text input still does not have focus\r\n                relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\r\n                inputEl.focus();\r\n                if (!(typeof window !== 'undefined')) return [3 /*break*/, 3];\r\n                scrollContent_1 = function () { return __awaiter(void 0, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                // clean up listeners and timeouts\r\n                                if (scrollContentTimeout_1 !== undefined) {\r\n                                    clearTimeout(scrollContentTimeout_1);\r\n                                }\r\n                                window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener_1);\r\n                                window.removeEventListener('ionKeyboardDidShow', scrollContent_1);\r\n                                if (!contentEl) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                _a.label = 2;\r\n                            case 2:\r\n                                // the scroll view is in the correct position now\r\n                                // give the native text input focus\r\n                                relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\r\n                                // ensure this is the focused input\r\n                                inputEl.focus();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); };\r\n                doubleKeyboardEventListener_1 = function () {\r\n                    window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener_1);\r\n                    window.addEventListener('ionKeyboardDidShow', scrollContent_1);\r\n                };\r\n                if (!contentEl) return [3 /*break*/, 2];\r\n                return [4 /*yield*/, contentEl.getScrollElement()];\r\n            case 1:\r\n                scrollEl = _a.sent();\r\n                totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\r\n                if (scrollData.scrollAmount > (totalScrollAmount - scrollEl.scrollTop)) {\r\n                    /**\r\n                     * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\r\n                     * after the initial keyboard is shown. This prevents the webview from resizing\r\n                     * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\r\n                     */\r\n                    if (inputEl.type === 'password') {\r\n                        // Add 50px to account for the \"Passwords\" bar\r\n                        scrollData.scrollAmount += 50;\r\n                        window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener_1);\r\n                    }\r\n                    else {\r\n                        window.addEventListener('ionKeyboardDidShow', scrollContent_1);\r\n                    }\r\n                    /**\r\n                     * This should only fire in 2 instances:\r\n                     * 1. The app is very slow.\r\n                     * 2. The app is running in a browser on an old OS\r\n                     * that does not support Ionic Keyboard Events\r\n                     */\r\n                    scrollContentTimeout_1 = setTimeout(scrollContent_1, 1000);\r\n                    return [2 /*return*/];\r\n                }\r\n                _a.label = 2;\r\n            case 2:\r\n                scrollContent_1();\r\n                _a.label = 3;\r\n            case 3: return [2 /*return*/];\r\n        }\r\n    });\r\n}); };\r\nvar hasPointerMoved = function (threshold, startCoord, endCoord) {\r\n    if (startCoord && endCoord) {\r\n        var deltaX = (startCoord.x - endCoord.x);\r\n        var deltaY = (startCoord.y - endCoord.y);\r\n        var distance = deltaX * deltaX + deltaY * deltaY;\r\n        return distance > (threshold * threshold);\r\n    }\r\n    return false;\r\n};\r\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\r\nvar enableScrollPadding = function (keyboardHeight) {\r\n    var doc = document;\r\n    var onFocusin = function (ev) {\r\n        setScrollPadding(ev.target, keyboardHeight);\r\n    };\r\n    var onFocusout = function (ev) {\r\n        setScrollPadding(ev.target, 0);\r\n    };\r\n    doc.addEventListener('focusin', onFocusin);\r\n    doc.addEventListener('focusout', onFocusout);\r\n    return function () {\r\n        doc.removeEventListener('focusin', onFocusin);\r\n        doc.removeEventListener('focusout', onFocusout);\r\n    };\r\n};\r\nvar setScrollPadding = function (input, keyboardHeight) {\r\n    if (input.tagName !== 'INPUT') {\r\n        return;\r\n    }\r\n    if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\r\n        return;\r\n    }\r\n    if (input.parentElement &&\r\n        input.parentElement.parentElement &&\r\n        input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\r\n        return;\r\n    }\r\n    var el = input.closest('ion-content');\r\n    if (el === null) {\r\n        return;\r\n    }\r\n    var timer = el[PADDING_TIMER_KEY];\r\n    if (timer) {\r\n        clearTimeout(timer);\r\n    }\r\n    if (keyboardHeight > 0) {\r\n        el.style.setProperty('--keyboard-offset', keyboardHeight + \"px\");\r\n    }\r\n    else {\r\n        el[PADDING_TIMER_KEY] = setTimeout(function () {\r\n            el.style.setProperty('--keyboard-offset', '0px');\r\n        }, 120);\r\n    }\r\n};\r\nvar INPUT_BLURRING = true;\r\nvar SCROLL_PADDING = true;\r\nvar startInputShims = function (config) {\r\n    var doc = document;\r\n    var keyboardHeight = config.getNumber('keyboardHeight', 290);\r\n    var scrollAssist = config.getBoolean('scrollAssist', true);\r\n    var hideCaret = config.getBoolean('hideCaretOnScroll', true);\r\n    var inputBlurring = config.getBoolean('inputBlurring', true);\r\n    var scrollPadding = config.getBoolean('scrollPadding', true);\r\n    var inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\r\n    var hideCaretMap = new WeakMap();\r\n    var scrollAssistMap = new WeakMap();\r\n    var registerInput = function (componentEl) { return __awaiter(void 0, void 0, void 0, function () {\r\n        var inputRoot, inputEl, scrollEl, footerEl, rmFn, rmFn;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!componentEl.componentOnReady) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, componentEl.componentOnReady()];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    inputRoot = componentEl.shadowRoot || componentEl;\r\n                    inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\r\n                    scrollEl = componentEl.closest('ion-content');\r\n                    footerEl = (!scrollEl) ? componentEl.closest('ion-footer') : null;\r\n                    if (!inputEl) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\r\n                        rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\r\n                        hideCaretMap.set(componentEl, rmFn);\r\n                    }\r\n                    if ((!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\r\n                        rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\r\n                        scrollAssistMap.set(componentEl, rmFn);\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    var unregisterInput = function (componentEl) {\r\n        if (hideCaret) {\r\n            var fn = hideCaretMap.get(componentEl);\r\n            if (fn) {\r\n                fn();\r\n            }\r\n            hideCaretMap.delete(componentEl);\r\n        }\r\n        if (scrollAssist) {\r\n            var fn = scrollAssistMap.get(componentEl);\r\n            if (fn) {\r\n                fn();\r\n            }\r\n            scrollAssistMap.delete(componentEl);\r\n        }\r\n    };\r\n    if (inputBlurring && INPUT_BLURRING) {\r\n        enableInputBlurring();\r\n    }\r\n    if (scrollPadding && SCROLL_PADDING) {\r\n        enableScrollPadding(keyboardHeight);\r\n    }\r\n    // Input might be already loaded in the DOM before ion-device-hacks did.\r\n    // At this point we need to look for all of the inputs not registered yet\r\n    // and register them.\r\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\r\n        var input = inputs_1[_i];\r\n        registerInput(input);\r\n    }\r\n    doc.addEventListener('ionInputDidLoad', (function (ev) {\r\n        registerInput(ev.detail);\r\n    }));\r\n    doc.addEventListener('ionInputDidUnload', (function (ev) {\r\n        unregisterInput(ev.detail);\r\n    }));\r\n};\r\nexport { startInputShims };\r\n"],"sourceRoot":""}