{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-virtual-scroll.entry.js"],"names":["createNode","el","type","template","getTemplate","ownerDocument","importNode","content","children","querySelector","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","offset","len","cells","end","i","value","item","push","index","height","reads","visible","VirtualScroll","class_1","hostRef","_this","this","registerInstance","range","length","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","prototype","itemsChanged","connectedCallback","__awaiter","contentEl","_a","__generator","_b","label","closest","getScrollElement","console","error","scrollEl","sent","updateState","componentDidUpdate","disconnectedCallback","undefined","onResize","positionForItem","Promise","resolve","heightIndex","cell","find","c","positionForIndex","getHeightIndex","checkRange","cellIndex","max","findIndex","findCellIndex","dst","src","inplaceUpdate","Math","scheduleUpdate","checkEnd","timerUpdate","clearTimeout","readTask","readVS","bind","writeTask","writeVS","topOffset","node","offsetTop","offsetParent","offsetHeight","scrollTop","dirtyIndex","viewport","vierportHeight","margin","top","bottom","getViewport","buffer","topPos","bottomPos","min","getRange","currentRange","getShouldUpdate","dom","_i","dom_1","change","d","toMutate","_loop_1","n","pool","filter","_loop_2","toMutate_1","forEach","updateVDom","nodeRender","updateCellHeight","child","Array","from","tagName","childrenNu","newChild","classList","add","appendChild","style","transform","remove","doRender","domRender","renderItem","forceUpdate","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","componentOnReady","then","setTimeout","shouldEnable","enableScrollEvents","Infinity","calcHeightIndex","buf","Uint32Array","newBuf","set","subarray","resizeBuffer","acum","shouldListen","rmEvent","addEventListener","removeEventListener","renderVirtualNode","renderHeader","renderFooter","render","h","Host","VirtualProxy","map","Object","defineProperty","get","getElement","enumerable","configurable","utils","vattrs","classes","class","assign"],"mappings":"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","file":"static/js/50.bad60a1f.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport { r as registerInstance, f as readTask, c as writeTask, j as forceUpdate, h, H as Host, i as getElement } from './index-92848855.js';\r\nvar CELL_TYPE_ITEM = 'item';\r\nvar CELL_TYPE_HEADER = 'header';\r\nvar CELL_TYPE_FOOTER = 'footer';\r\nvar NODE_CHANGE_NONE = 0;\r\nvar NODE_CHANGE_POSITION = 1;\r\nvar NODE_CHANGE_CELL = 2;\r\nvar MIN_READS = 2;\r\nvar updateVDom = function (dom, heightIndex, cells, range) {\r\n    // reset dom\r\n    for (var _i = 0, dom_1 = dom; _i < dom_1.length; _i++) {\r\n        var node = dom_1[_i];\r\n        node.change = NODE_CHANGE_NONE;\r\n        node.d = true;\r\n    }\r\n    // try to match into exisiting dom\r\n    var toMutate = [];\r\n    var end = range.offset + range.length;\r\n    var _loop_1 = function (i) {\r\n        var cell = cells[i];\r\n        var node = dom.find(function (n) { return n.d && n.cell === cell; });\r\n        if (node) {\r\n            var top = heightIndex[i];\r\n            if (top !== node.top) {\r\n                node.top = top;\r\n                node.change = NODE_CHANGE_POSITION;\r\n            }\r\n            node.d = false;\r\n        }\r\n        else {\r\n            toMutate.push(cell);\r\n        }\r\n    };\r\n    for (var i = range.offset; i < end; i++) {\r\n        _loop_1(i);\r\n    }\r\n    // needs to append\r\n    var pool = dom.filter(function (n) { return n.d; });\r\n    var _loop_2 = function (cell) {\r\n        var node = pool.find(function (n) { return n.d && n.cell.type === cell.type; });\r\n        var index = cell.i;\r\n        if (node) {\r\n            node.d = false;\r\n            node.change = NODE_CHANGE_CELL;\r\n            node.cell = cell;\r\n            node.top = heightIndex[index];\r\n        }\r\n        else {\r\n            dom.push({\r\n                d: false,\r\n                cell: cell,\r\n                visible: true,\r\n                change: NODE_CHANGE_CELL,\r\n                top: heightIndex[index],\r\n            });\r\n        }\r\n    };\r\n    for (var _a = 0, toMutate_1 = toMutate; _a < toMutate_1.length; _a++) {\r\n        var cell = toMutate_1[_a];\r\n        _loop_2(cell);\r\n    }\r\n    dom\r\n        .filter(function (n) { return n.d && n.top !== -9999; })\r\n        .forEach(function (n) {\r\n        n.change = NODE_CHANGE_POSITION;\r\n        n.top = -9999;\r\n    });\r\n};\r\nvar doRender = function (el, nodeRender, dom, updateCellHeight) {\r\n    var children = Array.from(el.children).filter(function (n) { return n.tagName !== 'TEMPLATE'; });\r\n    var childrenNu = children.length;\r\n    var child;\r\n    for (var i = 0; i < dom.length; i++) {\r\n        var node = dom[i];\r\n        var cell = node.cell;\r\n        // the cell change, the content must be updated\r\n        if (node.change === NODE_CHANGE_CELL) {\r\n            if (i < childrenNu) {\r\n                child = children[i];\r\n                nodeRender(child, cell, i);\r\n            }\r\n            else {\r\n                var newChild = createNode(el, cell.type);\r\n                child = nodeRender(newChild, cell, i) || newChild;\r\n                child.classList.add('virtual-item');\r\n                el.appendChild(child);\r\n            }\r\n            child['$ionCell'] = cell;\r\n        }\r\n        else {\r\n            child = children[i];\r\n        }\r\n        // only update position when it changes\r\n        if (node.change !== NODE_CHANGE_NONE) {\r\n            child.style.transform = \"translate3d(0,\" + node.top + \"px,0)\";\r\n        }\r\n        // update visibility\r\n        var visible = cell.visible;\r\n        if (node.visible !== visible) {\r\n            if (visible) {\r\n                child.classList.remove('virtual-loading');\r\n            }\r\n            else {\r\n                child.classList.add('virtual-loading');\r\n            }\r\n            node.visible = visible;\r\n        }\r\n        // dynamic height\r\n        if (cell.reads > 0) {\r\n            updateCellHeight(cell, child);\r\n            cell.reads--;\r\n        }\r\n    }\r\n};\r\nvar createNode = function (el, type) {\r\n    var template = getTemplate(el, type);\r\n    if (template && el.ownerDocument) {\r\n        return el.ownerDocument.importNode(template.content, true).children[0];\r\n    }\r\n    return null;\r\n};\r\nvar getTemplate = function (el, type) {\r\n    switch (type) {\r\n        case CELL_TYPE_ITEM: return el.querySelector('template:not([name])');\r\n        case CELL_TYPE_HEADER: return el.querySelector('template[name=header]');\r\n        case CELL_TYPE_FOOTER: return el.querySelector('template[name=footer]');\r\n    }\r\n};\r\nvar getViewport = function (scrollTop, vierportHeight, margin) {\r\n    return {\r\n        top: Math.max(scrollTop - margin, 0),\r\n        bottom: scrollTop + vierportHeight + margin\r\n    };\r\n};\r\nvar getRange = function (heightIndex, viewport, buffer) {\r\n    var topPos = viewport.top;\r\n    var bottomPos = viewport.bottom;\r\n    // find top index\r\n    var i = 0;\r\n    for (; i < heightIndex.length; i++) {\r\n        if (heightIndex[i] > topPos) {\r\n            break;\r\n        }\r\n    }\r\n    var offset = Math.max(i - buffer - 1, 0);\r\n    // find bottom index\r\n    for (; i < heightIndex.length; i++) {\r\n        if (heightIndex[i] >= bottomPos) {\r\n            break;\r\n        }\r\n    }\r\n    var end = Math.min(i + buffer, heightIndex.length);\r\n    var length = end - offset;\r\n    return { offset: offset, length: length };\r\n};\r\nvar getShouldUpdate = function (dirtyIndex, currentRange, range) {\r\n    var end = range.offset + range.length;\r\n    return (dirtyIndex <= end ||\r\n        currentRange.offset !== range.offset ||\r\n        currentRange.length !== range.length);\r\n};\r\nvar findCellIndex = function (cells, index) {\r\n    var max = cells.length > 0 ? cells[cells.length - 1].index : 0;\r\n    if (index === 0) {\r\n        return 0;\r\n    }\r\n    else if (index === max + 1) {\r\n        return cells.length;\r\n    }\r\n    else {\r\n        return cells.findIndex(function (c) { return c.index === index; });\r\n    }\r\n};\r\nvar inplaceUpdate = function (dst, src, offset) {\r\n    if (offset === 0 && src.length >= dst.length) {\r\n        return src;\r\n    }\r\n    for (var i = 0; i < src.length; i++) {\r\n        dst[i + offset] = src[i];\r\n    }\r\n    return dst;\r\n};\r\nvar calcCells = function (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) {\r\n    var cells = [];\r\n    var end = len + offset;\r\n    for (var i = offset; i < end; i++) {\r\n        var item = items[i];\r\n        if (headerFn) {\r\n            var value = headerFn(item, i, items);\r\n            if (value != null) {\r\n                cells.push({\r\n                    i: j++,\r\n                    type: CELL_TYPE_HEADER,\r\n                    value: value,\r\n                    index: i,\r\n                    height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\r\n                    reads: headerHeight ? 0 : MIN_READS,\r\n                    visible: !!headerHeight,\r\n                });\r\n            }\r\n        }\r\n        cells.push({\r\n            i: j++,\r\n            type: CELL_TYPE_ITEM,\r\n            value: item,\r\n            index: i,\r\n            height: itemHeight ? itemHeight(item, i) : approxItemHeight,\r\n            reads: itemHeight ? 0 : MIN_READS,\r\n            visible: !!itemHeight,\r\n        });\r\n        if (footerFn) {\r\n            var value = footerFn(item, i, items);\r\n            if (value != null) {\r\n                cells.push({\r\n                    i: j++,\r\n                    type: CELL_TYPE_FOOTER,\r\n                    value: value,\r\n                    index: i,\r\n                    height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\r\n                    reads: footerHeight ? 0 : MIN_READS,\r\n                    visible: !!footerHeight,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return cells;\r\n};\r\nvar calcHeightIndex = function (buf, cells, index) {\r\n    var acum = buf[index];\r\n    for (var i = index; i < buf.length; i++) {\r\n        buf[i] = acum;\r\n        acum += cells[i].height;\r\n    }\r\n    return acum;\r\n};\r\nvar resizeBuffer = function (buf, len) {\r\n    if (!buf) {\r\n        return new Uint32Array(len);\r\n    }\r\n    if (buf.length === len) {\r\n        return buf;\r\n    }\r\n    else if (len > buf.length) {\r\n        var newBuf = new Uint32Array(len);\r\n        newBuf.set(buf);\r\n        return newBuf;\r\n    }\r\n    else {\r\n        return buf.subarray(0, len);\r\n    }\r\n};\r\nvar positionForIndex = function (index, cells, heightIndex) {\r\n    var cell = cells.find(function (c) { return c.type === CELL_TYPE_ITEM && c.index === index; });\r\n    if (cell) {\r\n        return heightIndex[cell.i];\r\n    }\r\n    return -1;\r\n};\r\nvar virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\r\nvar VirtualScroll = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        var _this = this;\r\n        registerInstance(this, hostRef);\r\n        this.range = { offset: 0, length: 0 };\r\n        this.viewportHeight = 0;\r\n        this.cells = [];\r\n        this.virtualDom = [];\r\n        this.isEnabled = false;\r\n        this.viewportOffset = 0;\r\n        this.currentScrollTop = 0;\r\n        this.indexDirty = 0;\r\n        this.lastItemLen = 0;\r\n        this.totalHeight = 0;\r\n        /**\r\n         * It is important to provide this\r\n         * if virtual item height will be significantly larger than the default\r\n         * The approximate height of each virtual item template's cell.\r\n         * This dimension is used to help determine how many cells should\r\n         * be created when initialized, and to help calculate the height of\r\n         * the scrollable area. This height value can only use `px` units.\r\n         * Note that the actual rendered size of each cell comes from the\r\n         * app's CSS, whereas this approximation is used to help calculate\r\n         * initial dimensions before the item has been rendered.\r\n         */\r\n        this.approxItemHeight = 45;\r\n        /**\r\n         * The approximate height of each header template's cell.\r\n         * This dimension is used to help determine how many cells should\r\n         * be created when initialized, and to help calculate the height of\r\n         * the scrollable area. This height value can only use `px` units.\r\n         * Note that the actual rendered size of each cell comes from the\r\n         * app's CSS, whereas this approximation is used to help calculate\r\n         * initial dimensions before the item has been rendered.\r\n         */\r\n        this.approxHeaderHeight = 30;\r\n        /**\r\n         * The approximate width of each footer template's cell.\r\n         * This dimension is used to help determine how many cells should\r\n         * be created when initialized, and to help calculate the height of\r\n         * the scrollable area. This height value can only use `px` units.\r\n         * Note that the actual rendered size of each cell comes from the\r\n         * app's CSS, whereas this approximation is used to help calculate\r\n         * initial dimensions before the item has been rendered.\r\n         */\r\n        this.approxFooterHeight = 30;\r\n        this.onScroll = function () {\r\n            _this.updateVirtualScroll();\r\n        };\r\n    }\r\n    class_1.prototype.itemsChanged = function () {\r\n        this.calcCells();\r\n        this.updateVirtualScroll();\r\n    };\r\n    class_1.prototype.connectedCallback = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contentEl, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        contentEl = this.el.closest('ion-content');\r\n                        if (!contentEl) {\r\n                            console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a = this;\r\n                        return [4 /*yield*/, contentEl.getScrollElement()];\r\n                    case 1:\r\n                        _a.scrollEl = _b.sent();\r\n                        this.contentEl = contentEl;\r\n                        this.calcCells();\r\n                        this.updateState();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.componentDidUpdate = function () {\r\n        this.updateState();\r\n    };\r\n    class_1.prototype.disconnectedCallback = function () {\r\n        this.scrollEl = undefined;\r\n    };\r\n    class_1.prototype.onResize = function () {\r\n        this.calcCells();\r\n        this.updateVirtualScroll();\r\n    };\r\n    /**\r\n     * Returns the position of the virtual item at the given index.\r\n     */\r\n    class_1.prototype.positionForItem = function (index) {\r\n        return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\r\n    };\r\n    /**\r\n     * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\r\n     * dirty any time the content or their style changes.\r\n     *\r\n     * The subset of items to be updated can are specifing by an offset and a length.\r\n     */\r\n    class_1.prototype.checkRange = function (offset, len) {\r\n        if (len === void 0) { len = -1; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var length, cellIndex, cells;\r\n            return __generator(this, function (_a) {\r\n                // TODO: kind of hacky how we do in-place updated of the cells\r\n                // array. this part needs a complete refactor\r\n                if (!this.items) {\r\n                    return [2 /*return*/];\r\n                }\r\n                length = (len === -1)\r\n                    ? this.items.length - offset\r\n                    : len;\r\n                cellIndex = findCellIndex(this.cells, offset);\r\n                cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\r\n                this.cells = inplaceUpdate(this.cells, cells, cellIndex);\r\n                this.lastItemLen = this.items.length;\r\n                this.indexDirty = Math.max(offset - 1, 0);\r\n                this.scheduleUpdate();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method marks the tail the items array as dirty, so they can be re-rendered.\r\n     *\r\n     * It's equivalent to calling:\r\n     *\r\n     * ```js\r\n     * virtualScroll.checkRange(lastItemLen);\r\n     * ```\r\n     */\r\n    class_1.prototype.checkEnd = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.items) {\r\n                    this.checkRange(this.lastItemLen);\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.updateVirtualScroll = function () {\r\n        // do nothing if virtual-scroll is disabled\r\n        if (!this.isEnabled || !this.scrollEl) {\r\n            return;\r\n        }\r\n        // unschedule future updates\r\n        if (this.timerUpdate) {\r\n            clearTimeout(this.timerUpdate);\r\n            this.timerUpdate = undefined;\r\n        }\r\n        // schedule DOM operations into the stencil queue\r\n        readTask(this.readVS.bind(this));\r\n        writeTask(this.writeVS.bind(this));\r\n    };\r\n    class_1.prototype.readVS = function () {\r\n        var _a = this, contentEl = _a.contentEl, scrollEl = _a.scrollEl, el = _a.el;\r\n        var topOffset = 0;\r\n        var node = el;\r\n        while (node && node !== contentEl) {\r\n            topOffset += node.offsetTop;\r\n            node = node.offsetParent;\r\n        }\r\n        this.viewportOffset = topOffset;\r\n        if (scrollEl) {\r\n            this.viewportHeight = scrollEl.offsetHeight;\r\n            this.currentScrollTop = scrollEl.scrollTop;\r\n        }\r\n    };\r\n    class_1.prototype.writeVS = function () {\r\n        var dirtyIndex = this.indexDirty;\r\n        // get visible viewport\r\n        var scrollTop = this.currentScrollTop - this.viewportOffset;\r\n        var viewport = getViewport(scrollTop, this.viewportHeight, 100);\r\n        // compute lazily the height index\r\n        var heightIndex = this.getHeightIndex();\r\n        // get array bounds of visible cells base in the viewport\r\n        var range = getRange(heightIndex, viewport, 2);\r\n        // fast path, do nothing\r\n        var shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\r\n        if (!shouldUpdate) {\r\n            return;\r\n        }\r\n        this.range = range;\r\n        // in place mutation of the virtual DOM\r\n        updateVDom(this.virtualDom, heightIndex, this.cells, range);\r\n        // Write DOM\r\n        // Different code paths taken depending of the render API used\r\n        if (this.nodeRender) {\r\n            doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\r\n        }\r\n        else if (this.domRender) {\r\n            this.domRender(this.virtualDom);\r\n        }\r\n        else if (this.renderItem) {\r\n            forceUpdate(this);\r\n        }\r\n    };\r\n    class_1.prototype.updateCellHeight = function (cell, node) {\r\n        var _this = this;\r\n        var update = function () {\r\n            if (node['$ionCell'] === cell) {\r\n                var style = window.getComputedStyle(node);\r\n                var height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\r\n                _this.setCellHeight(cell, height);\r\n            }\r\n        };\r\n        if (node && node.componentOnReady) {\r\n            node.componentOnReady().then(update);\r\n        }\r\n        else {\r\n            update();\r\n        }\r\n    };\r\n    class_1.prototype.setCellHeight = function (cell, height) {\r\n        var index = cell.i;\r\n        // the cell might changed since the height update was scheduled\r\n        if (cell !== this.cells[index]) {\r\n            return;\r\n        }\r\n        if (cell.height !== height || cell.visible !== true) {\r\n            cell.visible = true;\r\n            cell.height = height;\r\n            this.indexDirty = Math.min(this.indexDirty, index);\r\n            this.scheduleUpdate();\r\n        }\r\n    };\r\n    class_1.prototype.scheduleUpdate = function () {\r\n        var _this = this;\r\n        clearTimeout(this.timerUpdate);\r\n        this.timerUpdate = setTimeout(function () { return _this.updateVirtualScroll(); }, 100);\r\n    };\r\n    class_1.prototype.updateState = function () {\r\n        var shouldEnable = !!(this.scrollEl &&\r\n            this.cells);\r\n        if (shouldEnable !== this.isEnabled) {\r\n            this.enableScrollEvents(shouldEnable);\r\n            if (shouldEnable) {\r\n                this.updateVirtualScroll();\r\n            }\r\n        }\r\n    };\r\n    class_1.prototype.calcCells = function () {\r\n        if (!this.items) {\r\n            return;\r\n        }\r\n        this.lastItemLen = this.items.length;\r\n        this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\r\n        this.indexDirty = 0;\r\n    };\r\n    class_1.prototype.getHeightIndex = function () {\r\n        if (this.indexDirty !== Infinity) {\r\n            this.calcHeightIndex(this.indexDirty);\r\n        }\r\n        return this.heightIndex;\r\n    };\r\n    class_1.prototype.calcHeightIndex = function (index) {\r\n        if (index === void 0) { index = 0; }\r\n        // TODO: optimize, we don't need to calculate all the cells\r\n        this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\r\n        this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\r\n        this.indexDirty = Infinity;\r\n    };\r\n    class_1.prototype.enableScrollEvents = function (shouldListen) {\r\n        var _this = this;\r\n        if (this.rmEvent) {\r\n            this.rmEvent();\r\n            this.rmEvent = undefined;\r\n        }\r\n        var scrollEl = this.scrollEl;\r\n        if (scrollEl) {\r\n            this.isEnabled = shouldListen;\r\n            scrollEl.addEventListener('scroll', this.onScroll);\r\n            this.rmEvent = function () {\r\n                scrollEl.removeEventListener('scroll', _this.onScroll);\r\n            };\r\n        }\r\n    };\r\n    class_1.prototype.renderVirtualNode = function (node) {\r\n        var _a = node.cell, type = _a.type, value = _a.value, index = _a.index;\r\n        switch (type) {\r\n            case CELL_TYPE_ITEM: return this.renderItem(value, index);\r\n            case CELL_TYPE_HEADER: return this.renderHeader(value, index);\r\n            case CELL_TYPE_FOOTER: return this.renderFooter(value, index);\r\n        }\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _this = this;\r\n        return (h(Host, { style: {\r\n                height: this.totalHeight + \"px\"\r\n            } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map(function (node) { return _this.renderVirtualNode(node); })))));\r\n    };\r\n    Object.defineProperty(class_1.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"itemHeight\": [\"itemsChanged\"],\r\n                \"headerHeight\": [\"itemsChanged\"],\r\n                \"footerHeight\": [\"itemsChanged\"],\r\n                \"items\": [\"itemsChanged\"]\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return class_1;\r\n}());\r\nvar VirtualProxy = function (_a, children, utils) {\r\n    var dom = _a.dom;\r\n    return utils.map(children, function (child, i) {\r\n        var node = dom[i];\r\n        var vattrs = child.vattrs || {};\r\n        var classes = vattrs.class || '';\r\n        classes += 'virtual-item ';\r\n        if (!node.visible) {\r\n            classes += 'virtual-loading';\r\n        }\r\n        return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: \"translate3d(0,\" + node.top + \"px,0)\" }) }) });\r\n    });\r\n};\r\nVirtualScroll.style = virtualScrollCss;\r\nexport { VirtualScroll as ion_virtual_scroll };\r\n"],"sourceRoot":""}