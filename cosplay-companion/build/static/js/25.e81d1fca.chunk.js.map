{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-input.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-5641d27f.js"],"names":["Input","class_1","hostRef","_this","this","registerInstance","ionInput","createEvent","ionChange","ionBlur","ionFocus","ionStyle","inputId","inputIds","didBlurAfterEdit","fireFocusEvents","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","emit","onBlur","focusChanged","emitStyle","onFocus","onKeydown","shouldClearOnEdit","hasValue","key","clearTextInput","clearTextOnEnter","preventDefault","stopPropagation","setFocus","nativeInput","prototype","debounceChanged","debounceEvent","disabledChanged","valueChanged","toString","componentWillLoad","el","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","connectedCallback","document","dispatchEvent","CustomEvent","detail","disconnectedCallback","__awaiter","__generator","_a","focus","setBlur","blur","getInputElement","Promise","resolve","clearOnEdit","getValue","placeholder","length","render","mode","getIonMode","labelId","label","findItemLabel","id","h","Host","class","createColorClasses","color","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","step","size","onKeyDown","onTouchStart","onMouseDown","Object","defineProperty","get","getElement","enumerable","configurable","style","ios","md","hostContext","selector","closest","cssClassMap","assign","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","direction","animation","router","test","querySelector","push"],"mappings":"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","file":"static/js/25.e81d1fca.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\r\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\r\nimport { d as debounceEvent, f as findItemLabel } from './helpers-47d562d2.js';\r\nimport { c as createColorClasses } from './theme-5641d27f.js';\r\nvar inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\r\nvar inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\r\nvar Input = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        var _this = this;\r\n        registerInstance(this, hostRef);\r\n        this.ionInput = createEvent(this, \"ionInput\", 7);\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n        this.inputId = \"ion-input-\" + inputIds++;\r\n        this.didBlurAfterEdit = false;\r\n        /**\r\n         * This is required for a WebKit bug which requires us to\r\n         * blur and focus an input to properly focus the input in\r\n         * an item with delegatesFocus. It will no longer be needed\r\n         * with iOS 14.\r\n         *\r\n         * @internal\r\n         */\r\n        this.fireFocusEvents = true;\r\n        this.hasFocus = false;\r\n        /**\r\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n         */\r\n        this.autocapitalize = 'off';\r\n        /**\r\n         * Indicates whether the value of the control can be automatically completed by the browser.\r\n         */\r\n        this.autocomplete = 'off';\r\n        /**\r\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\r\n         */\r\n        this.autocorrect = 'off';\r\n        /**\r\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n         */\r\n        this.autofocus = false;\r\n        /**\r\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\r\n         */\r\n        this.clearInput = false;\r\n        /**\r\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\r\n         */\r\n        this.debounce = 0;\r\n        /**\r\n         * If `true`, the user cannot interact with the input.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot modify the value.\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * If `true`, the user must fill in a value before submitting a form.\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * If `true`, the element will have its spelling and grammar checked.\r\n         */\r\n        this.spellcheck = false;\r\n        /**\r\n         * The type of control to display. The default type is text.\r\n         */\r\n        this.type = 'text';\r\n        /**\r\n         * The value of the input.\r\n         */\r\n        this.value = '';\r\n        this.onInput = function (ev) {\r\n            var input = ev.target;\r\n            if (input) {\r\n                _this.value = input.value || '';\r\n            }\r\n            _this.ionInput.emit(ev);\r\n        };\r\n        this.onBlur = function (ev) {\r\n            _this.hasFocus = false;\r\n            _this.focusChanged();\r\n            _this.emitStyle();\r\n            if (_this.fireFocusEvents) {\r\n                _this.ionBlur.emit(ev);\r\n            }\r\n        };\r\n        this.onFocus = function (ev) {\r\n            _this.hasFocus = true;\r\n            _this.focusChanged();\r\n            _this.emitStyle();\r\n            if (_this.fireFocusEvents) {\r\n                _this.ionFocus.emit(ev);\r\n            }\r\n        };\r\n        this.onKeydown = function (ev) {\r\n            if (_this.shouldClearOnEdit()) {\r\n                // Did the input value change after it was blurred and edited?\r\n                // Do not clear if user is hitting Enter to submit form\r\n                if (_this.didBlurAfterEdit && _this.hasValue() && ev.key !== 'Enter') {\r\n                    // Clear the input\r\n                    _this.clearTextInput();\r\n                }\r\n                // Reset the flag\r\n                _this.didBlurAfterEdit = false;\r\n            }\r\n        };\r\n        this.clearTextOnEnter = function (ev) {\r\n            if (ev.key === 'Enter') {\r\n                _this.clearTextInput(ev);\r\n            }\r\n        };\r\n        this.clearTextInput = function (ev) {\r\n            if (_this.clearInput && !_this.readonly && !_this.disabled && ev) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                // Attempt to focus input again after pressing clear button\r\n                _this.setFocus();\r\n            }\r\n            _this.value = '';\r\n            /**\r\n             * This is needed for clearOnEdit\r\n             * Otherwise the value will not be cleared\r\n             * if user is inside the input\r\n             */\r\n            if (_this.nativeInput) {\r\n                _this.nativeInput.value = '';\r\n            }\r\n        };\r\n    }\r\n    class_1.prototype.debounceChanged = function () {\r\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n    };\r\n    class_1.prototype.disabledChanged = function () {\r\n        this.emitStyle();\r\n    };\r\n    /**\r\n     * Update the native input element when the value changes\r\n     */\r\n    class_1.prototype.valueChanged = function () {\r\n        this.emitStyle();\r\n        this.ionChange.emit({ value: this.value == null ? this.value : this.value.toString() });\r\n    };\r\n    class_1.prototype.componentWillLoad = function () {\r\n        // If the ion-input has a tabindex attribute we get the value\r\n        // and pass it down to the native input, then remove it from the\r\n        // ion-input to avoid causing tabbing twice on the same element\r\n        if (this.el.hasAttribute('tabindex')) {\r\n            var tabindex = this.el.getAttribute('tabindex');\r\n            this.tabindex = tabindex !== null ? tabindex : undefined;\r\n            this.el.removeAttribute('tabindex');\r\n        }\r\n    };\r\n    class_1.prototype.connectedCallback = function () {\r\n        this.emitStyle();\r\n        this.debounceChanged();\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    };\r\n    class_1.prototype.disconnectedCallback = function () {\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n     * `input.focus()`.\r\n     */\r\n    class_1.prototype.setFocus = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.nativeInput) {\r\n                    this.nativeInput.focus();\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets blur on the native `input` in `ion-input`. Use this method instead of the global\r\n     * `input.blur()`.\r\n     * @internal\r\n     */\r\n    class_1.prototype.setBlur = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.nativeInput) {\r\n                    this.nativeInput.blur();\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the native `<input>` element used under the hood.\r\n     */\r\n    class_1.prototype.getInputElement = function () {\r\n        return Promise.resolve(this.nativeInput);\r\n    };\r\n    class_1.prototype.shouldClearOnEdit = function () {\r\n        var _a = this, type = _a.type, clearOnEdit = _a.clearOnEdit;\r\n        return (clearOnEdit === undefined)\r\n            ? type === 'password'\r\n            : clearOnEdit;\r\n    };\r\n    class_1.prototype.getValue = function () {\r\n        return typeof this.value === 'number' ? this.value.toString() :\r\n            (this.value || '').toString();\r\n    };\r\n    class_1.prototype.emitStyle = function () {\r\n        this.ionStyle.emit({\r\n            'interactive': true,\r\n            'input': true,\r\n            'has-placeholder': this.placeholder != null,\r\n            'has-value': this.hasValue(),\r\n            'has-focus': this.hasFocus,\r\n            'interactive-disabled': this.disabled,\r\n        });\r\n    };\r\n    class_1.prototype.focusChanged = function () {\r\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n        if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\r\n            this.didBlurAfterEdit = true;\r\n        }\r\n    };\r\n    class_1.prototype.hasValue = function () {\r\n        return this.getValue().length > 0;\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _a;\r\n        var _this = this;\r\n        var mode = getIonMode(this);\r\n        var value = this.getValue();\r\n        var labelId = this.inputId + '-lbl';\r\n        var label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, (_a = {},\r\n                _a[mode] = true,\r\n                _a['has-value'] = this.hasValue(),\r\n                _a['has-focus'] = this.hasFocus,\r\n                _a)) }, h(\"input\", { class: \"native-input\", ref: function (input) { return _this.nativeInput = input; }, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, step: this.step, size: this.size, tabindex: this.tabindex, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { \"aria-label\": \"reset\", type: \"button\", class: \"input-clear-icon\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput, onKeyDown: this.clearTextOnEnter })));\r\n    };\r\n    Object.defineProperty(class_1.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"debounce\": [\"debounceChanged\"],\r\n                \"disabled\": [\"disabledChanged\"],\r\n                \"value\": [\"valueChanged\"]\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return class_1;\r\n}());\r\nvar inputIds = 0;\r\nInput.style = {\r\n    ios: inputIosCss,\r\n    md: inputMdCss\r\n};\r\nexport { Input as ion_input };\r\n","import { __awaiter, __generator } from \"tslib\";\r\nvar hostContext = function (selector, el) {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nvar createColorClasses = function (color, cssClassMap) {\r\n    var _a;\r\n    return (typeof color === 'string' && color.length > 0) ? Object.assign((_a = { 'ion-color': true }, _a[\"ion-color-\" + color] = true, _a), cssClassMap) : cssClassMap;\r\n};\r\nvar getClassList = function (classes) {\r\n    if (classes !== undefined) {\r\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(function (c) { return c != null; })\r\n            .map(function (c) { return c.trim(); })\r\n            .filter(function (c) { return c !== ''; });\r\n    }\r\n    return [];\r\n};\r\nvar getClassMap = function (classes) {\r\n    var map = {};\r\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\r\n    return map;\r\n};\r\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nvar openURL = function (url, ev, direction, animation) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var router;\r\n    return __generator(this, function (_a) {\r\n        if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n            router = document.querySelector('ion-router');\r\n            if (router) {\r\n                if (ev != null) {\r\n                    ev.preventDefault();\r\n                }\r\n                return [2 /*return*/, router.push(url, direction, animation)];\r\n            }\r\n        }\r\n        return [2 /*return*/, false];\r\n    });\r\n}); };\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n"],"sourceRoot":""}