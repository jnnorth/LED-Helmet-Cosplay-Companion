{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\LED-Helmet-Cosplay-Companion\\\\cosplay-companion\\\\src\\\\components\\\\BluetoothButton.tsx\";\nimport React from 'react';\nimport { IonButton } from '@ionic/react';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nexport let bluetoothComponent = {\n  macAddress: 'B8:27:EB:C8:32:3B',\n  sendText: \"Test\",\n  testPiConnect: function () {\n    if (BluetoothSerial.isEnabled()) {\n      BluetoothSerial.connect('B8:27:EB:C8:32:3B');\n      BluetoothSerial.subscribe(\"\\n\");\n      let myTest = \"This is a test string!\";\n      BluetoothSerial.write(myTest).then(() => alert(\"Test string: \" + myTest + \" has been sent to Raspberry Pi.\"), () => alert(\"Failed to send test message!\"));\n      BluetoothSerial.list().then(devices => alert(\"Paired devices: \" + devices));\n      BluetoothSerial.disconnect().then(() => alert(\"Test Finished, Bluetooth has been disconnected.\"));\n    } else {\n      alert(\"Connection failed. Make sure Bluetooth is enabled on both devices.\");\n    }\n  },\n  setMAC: function (MAC) {\n    bluetoothComponent.macAddress = MAC;\n    console.log(\"Given MAC Address: \" + bluetoothComponent.macAddress);\n  },\n  onClick: function () {\n    let isClicked = \"true\";\n    bluetoothComponent.sendText = 'hello world';\n    window.localStorage.setItem(\"sendText\", bluetoothComponent.sendText);\n    window.localStorage.setItem(\"isClicked\", isClicked); //window.location.reload()\n\n    bluetoothComponent.init();\n  },\n  init: function () {\n    console.log(\"Initializing bluetooth connection...\");\n    alert(BluetoothSerial.discoverUnpaired());\n    bluetoothComponent.bindEvents();\n  },\n  bindEvents: function () {\n    document.addEventListener('findDevice', bluetoothComponent.connectBluetooth, false);\n    bluetoothComponent.connectBluetooth();\n  },\n  connectBluetooth: function () {\n    BluetoothSerial.connect(bluetoothComponent.macAddress);\n\n    if (BluetoothSerial.isEnabled()) {\n      bluetoothComponent.onConnect();\n    } else {\n      bluetoothComponent.connectFailed();\n    }\n  },\n  onConnect: function () {\n    BluetoothSerial.subscribe('\\n');\n    let data = 'This is a test string';\n    alert(\"Connected to device with MAC address: \" + bluetoothComponent.macAddress);\n    bluetoothComponent.sendData(data);\n  },\n  onDisconnect: function () {\n    alert(\"Device has been disconnected\");\n  },\n  sendData: function (data) {\n    BluetoothSerial.write(data);\n    bluetoothComponent.sendText = data;\n  },\n  listDevices: function () {\n    BluetoothSerial.list();\n  },\n  connectFailed: function () {\n    alert(\"Connection to device failed!\");\n  },\n  onError: function (errorMsg) {\n    console.log('Error: ' + errorMsg + '\\n');\n  },\n  testRender: function () {\n    let isClicked = window.localStorage.getItem(\"isClicked\");\n    let testText = window.localStorage.getItem(\"sendText\");\n    console.log(\"isClicked: \" + isClicked);\n    console.log(\"bluetoothComponent.sendText: \" + bluetoothComponent.sendText);\n\n    if (isClicked === \"true\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sentDataTest\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, \" Test: \", testText);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }\n      }, \"Test: No text available yet\");\n    }\n  }\n};\n\nconst BluetoothButton = ({\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: bluetoothComponent.testPiConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Connect to Device\")));\n};\n\nexport default BluetoothButton;","map":{"version":3,"sources":["C:/Users/Nick/Desktop/LED-Helmet-Cosplay-Companion/cosplay-companion/src/components/BluetoothButton.tsx"],"names":["React","IonButton","BluetoothSerial","bluetoothComponent","macAddress","sendText","testPiConnect","isEnabled","connect","subscribe","myTest","write","then","alert","list","devices","disconnect","setMAC","MAC","console","log","onClick","isClicked","window","localStorage","setItem","init","discoverUnpaired","bindEvents","document","addEventListener","connectBluetooth","onConnect","connectFailed","data","sendData","onDisconnect","listDevices","onError","errorMsg","testRender","getItem","testText","BluetoothButton","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { IonButton } from '@ionic/react';\r\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\r\n\r\nexport let bluetoothComponent = {\r\n  macAddress: 'B8:27:EB:C8:32:3B',\r\n  sendText: \"Test\",\r\n\r\n  testPiConnect: function() {\r\n    if (BluetoothSerial.isEnabled()) {\r\n      BluetoothSerial.connect('B8:27:EB:C8:32:3B')\r\n      BluetoothSerial.subscribe(\"\\n\")\r\n      let myTest:string = \"This is a test string!\"\r\n      BluetoothSerial.write(myTest).then( () => alert(\"Test string: \" + myTest + \" has been sent to Raspberry Pi.\"), () => alert(\"Failed to send test message!\") )\r\n      BluetoothSerial.list().then(devices => alert(\"Paired devices: \" + devices))\r\n      BluetoothSerial.disconnect().then( () => alert(\"Test Finished, Bluetooth has been disconnected.\"))\r\n    }\r\n    else {\r\n      alert(\"Connection failed. Make sure Bluetooth is enabled on both devices.\")\r\n    }\r\n  },\r\n\r\n  setMAC: function(MAC:string) {\r\n    bluetoothComponent.macAddress = MAC;\r\n    console.log(\"Given MAC Address: \" + bluetoothComponent.macAddress)\r\n  },\r\n\r\n  onClick: function() {\r\n    let isClicked = \"true\"\r\n    bluetoothComponent.sendText = 'hello world'\r\n    window.localStorage.setItem(\"sendText\", bluetoothComponent.sendText)\r\n    window.localStorage.setItem(\"isClicked\", isClicked)\r\n    //window.location.reload()\r\n    bluetoothComponent.init()\r\n  },\r\n\r\n  init: function() {\r\n    console.log(\"Initializing bluetooth connection...\")\r\n    alert(BluetoothSerial.discoverUnpaired())\r\n    bluetoothComponent.bindEvents()\r\n  },\r\n\r\n  bindEvents: function() {\r\n    document.addEventListener('findDevice', bluetoothComponent.connectBluetooth, false)\r\n    bluetoothComponent.connectBluetooth()\r\n  },\r\n\r\n  connectBluetooth: function() {\r\n    BluetoothSerial.connect(bluetoothComponent.macAddress)\r\n    if (BluetoothSerial.isEnabled()) {\r\n      bluetoothComponent.onConnect()\r\n    }\r\n    else\r\n    {\r\n      bluetoothComponent.connectFailed()\r\n    }\r\n  },\r\n\r\n  onConnect: function() {\r\n    BluetoothSerial.subscribe('\\n')\r\n    let data:string = 'This is a test string'\r\n    alert(\"Connected to device with MAC address: \" + bluetoothComponent.macAddress)\r\n    bluetoothComponent.sendData(data)\r\n  },\r\n\r\n  onDisconnect: function() {\r\n    alert(\"Device has been disconnected\")\r\n  },\r\n\r\n  sendData: function(data:string) {\r\n    BluetoothSerial.write(data)\r\n    bluetoothComponent.sendText = data\r\n  },\r\n\r\n  listDevices: function() {\r\n    BluetoothSerial.list()\r\n  },\r\n\r\n  connectFailed: function() {\r\n    alert(\"Connection to device failed!\")\r\n  },\r\n\r\n  onError: function(errorMsg:string) {\r\n    console.log('Error: ' + errorMsg + '\\n')\r\n  },\r\n\r\n  testRender: function() {\r\n\r\n    let isClicked = window.localStorage.getItem(\"isClicked\")\r\n    let testText = window.localStorage.getItem(\"sendText\")\r\n\r\n    console.log(\"isClicked: \" + isClicked)\r\n    console.log(\"bluetoothComponent.sendText: \" + bluetoothComponent.sendText)\r\n\r\n    if (isClicked === \"true\")\r\n    {\r\n      return( <div className=\"sentDataTest\"> Test: {testText}\r\n      </div> )\r\n    }\r\n    else\r\n    {\r\n      return ( <div>Test: No text available yet</div> )\r\n    }\r\n    \r\n  }\r\n};\r\n\r\ninterface ContainerProps {\r\n    title: string;\r\n  }\r\n  \r\n  const BluetoothButton: React.FC<ContainerProps> = ({ title }) => {   \r\n    return (\r\n      <div className=\"container\" id=\"container\">\r\n        <strong>{title}</strong>\r\n            <p>\r\n                <IonButton color=\"primary\" size=\"large\" onClick={bluetoothComponent.testPiConnect}>Connect to Device</IonButton>\r\n            </p>\r\n      </div>\r\n    );\r\n\r\n  };\r\n  \r\n  export default BluetoothButton;"]},"metadata":{},"sourceType":"module"}