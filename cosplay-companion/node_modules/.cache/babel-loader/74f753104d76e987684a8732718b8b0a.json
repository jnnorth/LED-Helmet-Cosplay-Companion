{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\LED-Helmet-Cosplay-Companion\\\\cosplay-companion\\\\src\\\\components\\\\Color.tsx\";\nimport React from 'react';\nimport { IonButton } from '@ionic/react';\nimport { bluetoothComponent } from '../components/BluetoothButton';\nimport './Color.css';\n\nfunction hexToRGBString(hex) {\n  let res = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  if (hex.length != 7) {\n    throw \"Only six-digit hex colors are allowed.\";\n  }\n\n  let rgb = [parseInt(res[1], 16), parseInt(res[2], 16), parseInt(res[3], 16)];\n  let type = \"c \";\n  let returnString = type + String(rgb[0]) + \" \" + String(rgb[1]) + \" \" + String(rgb[2]);\n  sendButtonMapping(returnString);\n}\n\nfunction sendButtonMapping(data) {\n  console.log(data);\n\n  if (bluetoothComponent.bluetooth_started) {\n    bluetoothComponent.send_to_pi(data);\n    return data;\n  } else {\n    console.log(\"Bluetooth connection has not been established!\");\n    return data;\n  }\n}\n\nclass Color extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '#ffffff'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(this.state.input);\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"picker\",\n      id: \"picker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Select a color: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"color\",\n      id: \"Color\",\n      value: this.state.input,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      color: \"secondary\",\n      size: \"large\",\n      onClick: () => hexToRGBString(this.state.input),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \" Confirm Choice\")));\n  }\n\n}\n\n;\nexport default Color;","map":{"version":3,"sources":["C:/Users/Nick/Desktop/LED-Helmet-Cosplay-Companion/cosplay-companion/src/components/Color.tsx"],"names":["React","IonButton","bluetoothComponent","hexToRGBString","hex","res","exec","length","rgb","parseInt","type","returnString","String","sendButtonMapping","data","console","log","bluetooth_started","send_to_pi","Color","Component","constructor","props","state","input","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,OAAO,aAAP;;AAGA,SAASC,cAAT,CAAwBC,GAAxB,EAAoC;AAClC,MAAIC,GAAG,GAAG,4CAA4CC,IAA5C,CAAiDF,GAAjD,CAAV;;AACA,MAAIA,GAAG,CAACG,MAAJ,IAAc,CAAlB,EAAoB;AAClB,UAAM,wCAAN;AACD;;AAED,MAAIC,GAAG,GAAG,CACRC,QAAQ,CAACJ,GAAG,CAAC,CAAD,CAAJ,EAAS,EAAT,CADA,EAERI,QAAQ,CAACJ,GAAG,CAAC,CAAD,CAAJ,EAAS,EAAT,CAFA,EAGRI,QAAQ,CAACJ,GAAG,CAAC,CAAD,CAAJ,EAAS,EAAT,CAHA,CAAV;AAMA,MAAIK,IAAI,GAAG,IAAX;AACA,MAAIC,YAAY,GAAGD,IAAI,GAAGE,MAAM,CAACJ,GAAG,CAAC,CAAD,CAAJ,CAAb,GAAwB,GAAxB,GAA8BI,MAAM,CAACJ,GAAG,CAAC,CAAD,CAAJ,CAApC,GAA+C,GAA/C,GAAqDI,MAAM,CAACJ,GAAG,CAAC,CAAD,CAAJ,CAA9E;AAEAK,EAAAA,iBAAiB,CAACF,YAAD,CAAjB;AACD;;AAED,SAASE,iBAAT,CAA2BC,IAA3B,EACA;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAIZ,kBAAkB,CAACe,iBAAvB,EACA;AACEf,IAAAA,kBAAkB,CAACgB,UAAnB,CAA8BJ,IAA9B;AACA,WAAOA,IAAP;AACD,GAJD,MAMA;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACA,WAAOF,IAAP;AACD;AACF;;AAED,MAAMK,KAAN,SAAoBnB,KAAK,CAACoB,SAA1B,CAAwD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAY;AACtB;AACA,SAAKC,QAAL,CAAc;AAACL,MAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAArB,KAAd;AACD;;AAEDJ,EAAAA,YAAY,CAACC,KAAD,EAAY;AACtBA,IAAAA,KAAK,CAACI,cAAN;AACD;;AAIDC,EAAAA,MAAM,GAAG;AACP,wBAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,EAAE,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEM;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,OAAvB;AAA+B,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKC,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,OAAlC;AAA0C,MAAA,OAAO,EAAE,MAAMtB,cAAc,CAAC,KAAKoB,KAAL,CAAWC,KAAZ,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CALF,CAFF;AAYD;;AAhCmD;;AAkCrD;AAED,eAAeL,KAAf","sourcesContent":["import React from 'react';\r\nimport { IonButton } from '@ionic/react';\r\nimport { bluetoothComponent } from '../components/BluetoothButton';\r\nimport './Color.css';\r\n\r\n\r\nfunction hexToRGBString(hex:string) {\r\n  let res = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)!;\r\n  if (hex.length != 7){\r\n    throw \"Only six-digit hex colors are allowed.\";\r\n  }\r\n\r\n  let rgb = [ \r\n    parseInt(res[1], 16),\r\n    parseInt(res[2], 16),\r\n    parseInt(res[3], 16)\r\n  ];\r\n\r\n  let type = \"c \";\r\n  let returnString = type + String(rgb[0]) + \" \" + String(rgb[1]) + \" \" + String(rgb[2]);\r\n  \r\n  sendButtonMapping(returnString);\r\n}\r\n\r\nfunction sendButtonMapping(data:string)\r\n{\r\n  console.log(data)\r\n  if (bluetoothComponent.bluetooth_started)\r\n  {\r\n    bluetoothComponent.send_to_pi(data)\r\n    return data\r\n  }\r\n  else\r\n  {\r\n    console.log(\"Bluetooth connection has not been established!\")\r\n    return data\r\n  }\r\n}\r\n\r\nclass Color extends React.Component<{}, {input:string}> {\r\n    constructor(props:any) {\r\n      super(props);\r\n      this.state = {input: '#ffffff'};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event:any) {\r\n      //console.log(this.state.input);\r\n      this.setState({input: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event:any) {\r\n      event.preventDefault();\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n      return (\r\n           \r\n        <div className=\"picker\" id=\"picker\">\r\n          <label>\r\n            <h1>Select a color: </h1>\r\n                <input type=\"color\" id=\"Color\" value={this.state.input} onChange={this.handleChange}/>\r\n          </label>\r\n          <p>\r\n            <IonButton color=\"secondary\" size=\"large\" onClick={() => hexToRGBString(this.state.input)}> Confirm Choice</IonButton>\r\n        </p></div>\r\n\r\n      );\r\n    }\r\n\r\n  };\r\n  \r\n  export default Color;\r\n"]},"metadata":{},"sourceType":"module"}