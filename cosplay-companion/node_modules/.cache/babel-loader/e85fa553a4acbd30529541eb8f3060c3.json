{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\LED-Helmet-Cosplay-Companion\\\\cosplay-companion\\\\src\\\\components\\\\BluetoothButton.tsx\";\nimport React from 'react';\nimport { IonButton } from '@ionic/react';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nlet bluetoothComponent = {\n  macAddress: 'AA:BB:CC:DD:EE:FF',\n  // dummy MAC address, need to manually enter MAC address of Raspberry Pi\n  status: false,\n  init: function () {\n    this.bindEvents();\n  },\n  bindEvents: function () {\n    document.addEventListener('findDevice', this.connectBluetooth, false);\n  },\n  connectBluetooth: function () {\n    BluetoothSerial.connect(this.macAddress);\n\n    if (BluetoothSerial.isEnabled()) {\n      this.onConnect();\n    } else {\n      this.onDisconnect();\n    }\n  },\n  onConnect: function () {\n    BluetoothSerial.subscribe('\\n');\n    let data = 'hello world';\n    this.sendData(data);\n  },\n  onDisconnect: function () {\n    alert(\"Device has been disconnected\");\n  },\n  sendData: function (data) {\n    BluetoothSerial.write(data);\n  },\n  listDevices: function () {\n    BluetoothSerial.list();\n  },\n  connectFailed: function () {\n    alert(\"Connection to device failed!\");\n  },\n  onError: function (errorMsg) {\n    console.log('Error: ' + errorMsg + '\\n');\n  },\n  test1: function () {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }\n    }, \"This is a test\");\n  }\n};\n\nconst BluetoothButton = ({\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: bluetoothComponent.init,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Connect to Device\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"device\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default BluetoothButton;","map":{"version":3,"sources":["C:/Users/Nick/Desktop/LED-Helmet-Cosplay-Companion/cosplay-companion/src/components/BluetoothButton.tsx"],"names":["React","IonButton","BluetoothSerial","bluetoothComponent","macAddress","status","init","bindEvents","document","addEventListener","connectBluetooth","connect","isEnabled","onConnect","onDisconnect","subscribe","data","sendData","alert","write","listDevices","list","connectFailed","onError","errorMsg","console","log","test1","BluetoothButton","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,UAAU,EAAE,mBADW;AACU;AACjCC,EAAAA,MAAM,EAAE,KAFe;AAIvBC,EAAAA,IAAI,EAAE,YAAW;AACf,SAAKC,UAAL;AACD,GANsB;AAQvBA,EAAAA,UAAU,EAAE,YAAW;AACrBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwC,KAAKC,gBAA7C,EAA+D,KAA/D;AACD,GAVsB;AAYvBA,EAAAA,gBAAgB,EAAE,YAAW;AAC3BR,IAAAA,eAAe,CAACS,OAAhB,CAAwB,KAAKP,UAA7B;;AACA,QAAGF,eAAe,CAACU,SAAhB,EAAH,EAAgC;AAC9B,WAAKC,SAAL;AACD,KAFD,MAGK;AACH,WAAKC,YAAL;AACD;AACF,GApBsB;AAsBvBD,EAAAA,SAAS,EAAE,YAAW;AACpBX,IAAAA,eAAe,CAACa,SAAhB,CAA0B,IAA1B;AACA,QAAIC,IAAW,GAAG,aAAlB;AACA,SAAKC,QAAL,CAAcD,IAAd;AACD,GA1BsB;AA4BvBF,EAAAA,YAAY,EAAE,YAAW;AACvBI,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,GA9BsB;AAgCvBD,EAAAA,QAAQ,EAAE,UAASD,IAAT,EAAsB;AAC9Bd,IAAAA,eAAe,CAACiB,KAAhB,CAAsBH,IAAtB;AACD,GAlCsB;AAoCvBI,EAAAA,WAAW,EAAE,YAAW;AACtBlB,IAAAA,eAAe,CAACmB,IAAhB;AACD,GAtCsB;AAwCvBC,EAAAA,aAAa,EAAE,YAAW;AACxBJ,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,GA1CsB;AA4CvBK,EAAAA,OAAO,EAAE,UAASC,QAAT,EAA0B;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,QAAZ,GAAuB,IAAnC;AACD,GA9CsB;AAgDvBG,EAAAA,KAAK,EAAE,YAAW;AAChB,wBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAT;AACD;AAlDsB,CAAzB;;AAyDE,MAAMC,eAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/D,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,KAAT,CADF,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAE,OAAjC;AAAyC,IAAA,OAAO,EAAG1B,kBAAkB,CAACG,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAFN,eAKM;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,CADF;AASD,CAVD;;AAYA,eAAesB,eAAf","sourcesContent":["import React from 'react';\r\nimport { IonButton } from '@ionic/react';\r\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\r\n\r\nlet bluetoothComponent = {\r\n  macAddress: 'AA:BB:CC:DD:EE:FF', // dummy MAC address, need to manually enter MAC address of Raspberry Pi\r\n  status: false,\r\n\r\n  init: function() {\r\n    this.bindEvents()\r\n  },\r\n\r\n  bindEvents: function() {\r\n    document.addEventListener('findDevice', this.connectBluetooth, false)\r\n  },\r\n\r\n  connectBluetooth: function() {\r\n    BluetoothSerial.connect(this.macAddress)\r\n    if(BluetoothSerial.isEnabled()) {\r\n      this.onConnect()\r\n    }\r\n    else {\r\n      this.onDisconnect()\r\n    }\r\n  },\r\n\r\n  onConnect: function() {\r\n    BluetoothSerial.subscribe('\\n')\r\n    let data:string = 'hello world'\r\n    this.sendData(data)\r\n  },\r\n\r\n  onDisconnect: function() {\r\n    alert(\"Device has been disconnected\")\r\n  },\r\n\r\n  sendData: function(data:string) {\r\n    BluetoothSerial.write(data)\r\n  },\r\n\r\n  listDevices: function() {\r\n    BluetoothSerial.list()\r\n  },\r\n\r\n  connectFailed: function() {\r\n    alert(\"Connection to device failed!\")\r\n  },\r\n\r\n  onError: function(errorMsg:string) {\r\n    console.log('Error: ' + errorMsg + '\\n')\r\n  },\r\n\r\n  test1: function() {\r\n    return ( <p>This is a test</p> )\r\n  }\r\n};\r\n\r\ninterface ContainerProps {\r\n    title: string;\r\n  }\r\n  \r\n  const BluetoothButton: React.FC<ContainerProps> = ({ title }) => {\r\n    return (\r\n      <div className=\"container\">\r\n        <strong>{title}</strong>\r\n            <p>\r\n                <IonButton color=\"primary\" size= \"large\" onClick= {bluetoothComponent.init}>Connect to Device</IonButton>\r\n            </p>\r\n            <div id=\"device\"></div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default BluetoothButton;"]},"metadata":{},"sourceType":"module"}