{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\LED-Helmet-Cosplay-Companion\\\\cosplay-companion\\\\src\\\\components\\\\BluetoothButton.tsx\";\nimport React, { useState } from 'react';\nimport { IonButton } from '@ionic/react';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nlet bluetoothComponent = {\n  macAddress: 'AA:BB:CC:DD:EE:FF',\n  // dummy MAC address, need to manually enter MAC address of Raspberry Pi\n  sendText: \"\",\n  init: function () {\n    console.log(\"Initializing bluetooth connection...\");\n    bluetoothComponent.bindEvents();\n  },\n  bindEvents: function () {\n    document.addEventListener('findDevice', bluetoothComponent.connectBluetooth, false);\n  },\n  connectBluetooth: function () {\n    BluetoothSerial.connect(bluetoothComponent.macAddress);\n\n    if (BluetoothSerial.isEnabled()) {\n      bluetoothComponent.onConnect();\n    } else {\n      bluetoothComponent.onDisconnect();\n    }\n  },\n  onConnect: function () {\n    alert(\"Connected to device with MAC address: \" + bluetoothComponent.macAddress + \" .\");\n    BluetoothSerial.subscribe('\\n');\n    let data = 'hello world';\n    bluetoothComponent.sendData(data);\n  },\n  onDisconnect: function () {\n    alert(\"Device has been disconnected\");\n  },\n  sendData: function (data) {\n    BluetoothSerial.write(data);\n    bluetoothComponent.sendText = data;\n  },\n  listDevices: function () {\n    BluetoothSerial.list();\n  },\n  connectFailed: function () {\n    alert(\"Connection to device failed!\");\n  },\n  onError: function (errorMsg) {\n    console.log('Error: ' + errorMsg + '\\n');\n  },\n  testRender: function () {\n    const [state, setState] = useState(false);\n\n    const stateChanged = () => setState(true);\n\n    const stateUnchanged = () => setState(false);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }, bluetoothComponent.sendText);\n  }\n};\n\nconst BluetoothButton = ({\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: bluetoothComponent.init,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Connect to Device\")), /*#__PURE__*/React.createElement(bluetoothComponent.testRender, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default BluetoothButton;","map":{"version":3,"sources":["C:/Users/Nick/Desktop/LED-Helmet-Cosplay-Companion/cosplay-companion/src/components/BluetoothButton.tsx"],"names":["React","useState","IonButton","BluetoothSerial","bluetoothComponent","macAddress","sendText","init","console","log","bindEvents","document","addEventListener","connectBluetooth","connect","isEnabled","onConnect","onDisconnect","alert","subscribe","data","sendData","write","listDevices","list","connectFailed","onError","errorMsg","testRender","state","setState","stateChanged","stateUnchanged","BluetoothButton","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,UAAU,EAAE,mBADW;AACU;AACjCC,EAAAA,QAAQ,EAAE,EAFa;AAIvBC,EAAAA,IAAI,EAAE,YAAW;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAL,IAAAA,kBAAkB,CAACM,UAAnB;AACD,GAPsB;AASvBA,EAAAA,UAAU,EAAE,YAAW;AACrBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCR,kBAAkB,CAACS,gBAA3D,EAA6E,KAA7E;AACD,GAXsB;AAavBA,EAAAA,gBAAgB,EAAE,YAAW;AAC3BV,IAAAA,eAAe,CAACW,OAAhB,CAAwBV,kBAAkB,CAACC,UAA3C;;AACA,QAAGF,eAAe,CAACY,SAAhB,EAAH,EAAgC;AAC9BX,MAAAA,kBAAkB,CAACY,SAAnB;AACD,KAFD,MAGK;AACHZ,MAAAA,kBAAkB,CAACa,YAAnB;AACD;AACF,GArBsB;AAuBvBD,EAAAA,SAAS,EAAE,YAAW;AACpBE,IAAAA,KAAK,CAAC,2CAA2Cd,kBAAkB,CAACC,UAA9D,GAA2E,IAA5E,CAAL;AACAF,IAAAA,eAAe,CAACgB,SAAhB,CAA0B,IAA1B;AACA,QAAIC,IAAW,GAAG,aAAlB;AACAhB,IAAAA,kBAAkB,CAACiB,QAAnB,CAA4BD,IAA5B;AACD,GA5BsB;AA8BvBH,EAAAA,YAAY,EAAE,YAAW;AACvBC,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,GAhCsB;AAkCvBG,EAAAA,QAAQ,EAAE,UAASD,IAAT,EAAsB;AAC9BjB,IAAAA,eAAe,CAACmB,KAAhB,CAAsBF,IAAtB;AACAhB,IAAAA,kBAAkB,CAACE,QAAnB,GAA8Bc,IAA9B;AACD,GArCsB;AAuCvBG,EAAAA,WAAW,EAAE,YAAW;AACtBpB,IAAAA,eAAe,CAACqB,IAAhB;AACD,GAzCsB;AA2CvBC,EAAAA,aAAa,EAAE,YAAW;AACxBP,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,GA7CsB;AA+CvBQ,EAAAA,OAAO,EAAE,UAASC,QAAT,EAA0B;AACjCnB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYkB,QAAZ,GAAuB,IAAnC;AACD,GAjDsB;AAmDvBC,EAAAA,UAAU,EAAE,YAAW;AACrB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,KAAD,CAAlC;;AACA,UAAM8B,YAAY,GAAG,MAAMD,QAAQ,CAAC,IAAD,CAAnC;;AACA,UAAME,cAAc,GAAG,MAAMF,QAAQ,CAAC,KAAD,CAArC;;AACA,wBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM1B,kBAAkB,CAACE,QAAzB,CAAT;AACD;AAxDsB,CAAzB;;AA+DE,MAAM2B,eAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/D,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,KAAT,CADF,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,OAAO,EAAE9B,kBAAkB,CAACG,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAFN,eAKM,oBAAC,kBAAD,CAAoB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,CADF;AASD,CAVD;;AAYA,eAAe0B,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { IonButton } from '@ionic/react';\r\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\r\n\r\nlet bluetoothComponent = {\r\n  macAddress: 'AA:BB:CC:DD:EE:FF', // dummy MAC address, need to manually enter MAC address of Raspberry Pi\r\n  sendText: \"\",\r\n\r\n  init: function() {\r\n    console.log(\"Initializing bluetooth connection...\")\r\n    bluetoothComponent.bindEvents()\r\n  },\r\n\r\n  bindEvents: function() {\r\n    document.addEventListener('findDevice', bluetoothComponent.connectBluetooth, false)\r\n  },\r\n\r\n  connectBluetooth: function() {\r\n    BluetoothSerial.connect(bluetoothComponent.macAddress)\r\n    if(BluetoothSerial.isEnabled()) {\r\n      bluetoothComponent.onConnect()\r\n    }\r\n    else {\r\n      bluetoothComponent.onDisconnect()\r\n    }\r\n  },\r\n\r\n  onConnect: function() {\r\n    alert(\"Connected to device with MAC address: \" + bluetoothComponent.macAddress + \" .\")\r\n    BluetoothSerial.subscribe('\\n')\r\n    let data:string = 'hello world'\r\n    bluetoothComponent.sendData(data)\r\n  },\r\n\r\n  onDisconnect: function() {\r\n    alert(\"Device has been disconnected\")\r\n  },\r\n\r\n  sendData: function(data:string) {\r\n    BluetoothSerial.write(data)\r\n    bluetoothComponent.sendText = data\r\n  },\r\n\r\n  listDevices: function() {\r\n    BluetoothSerial.list()\r\n  },\r\n\r\n  connectFailed: function() {\r\n    alert(\"Connection to device failed!\")\r\n  },\r\n\r\n  onError: function(errorMsg:string) {\r\n    console.log('Error: ' + errorMsg + '\\n')\r\n  },\r\n\r\n  testRender: function() {\r\n    const [state, setState] = useState(false)\r\n    const stateChanged = () => setState(true)\r\n    const stateUnchanged = () => setState(false)\r\n    return ( <div>{bluetoothComponent.sendText}</div> )\r\n  }\r\n};\r\n\r\ninterface ContainerProps {\r\n    title: string;\r\n  }\r\n  \r\n  const BluetoothButton: React.FC<ContainerProps> = ({ title }) => {\r\n    return (\r\n      <div className=\"container\">\r\n        <strong>{title}</strong>\r\n            <p>\r\n                <IonButton color=\"primary\" size=\"large\" onClick={bluetoothComponent.init}>Connect to Device</IonButton>\r\n            </p>    \r\n            <bluetoothComponent.testRender />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default BluetoothButton;"]},"metadata":{},"sourceType":"module"}