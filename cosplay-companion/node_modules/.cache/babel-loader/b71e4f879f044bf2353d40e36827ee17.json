{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\LED-Helmet-Cosplay-Companion\\\\cosplay-companion\\\\src\\\\components\\\\BluetoothButton.tsx\";\nimport React from 'react';\nimport { IonButton } from '@ionic/react';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nexport let bluetoothComponent = {\n  macAddress: 'B8:27:EB:C8:32:3B',\n  sendText: \"Test\",\n  setMAC: function (MAC) {\n    bluetoothComponent.macAddress = MAC;\n    console.log(\"Given MAC Address: \" + bluetoothComponent.macAddress);\n  },\n  onClick: function () {\n    let isClicked = \"true\";\n    bluetoothComponent.sendText = 'hello world';\n    window.localStorage.setItem(\"sendText\", bluetoothComponent.sendText);\n    window.localStorage.setItem(\"isClicked\", isClicked);\n    window.location.reload();\n    bluetoothComponent.init();\n  },\n  init: function () {\n    console.log(\"Initializing bluetooth connection...\");\n    bluetoothComponent.bindEvents();\n  },\n  bindEvents: function () {\n    document.addEventListener('findDevice', bluetoothComponent.connectBluetooth, false); //bluetoothComponent.connectBluetooth()\n  },\n  connectBluetooth: function () {\n    BluetoothSerial.connect(bluetoothComponent.macAddress);\n\n    if (BluetoothSerial.isEnabled()) {\n      bluetoothComponent.onConnect();\n    } else {\n      bluetoothComponent.onDisconnect();\n    }\n  },\n  onConnect: function () {\n    alert(\"Connected to device with MAC address: \" + bluetoothComponent.macAddress + \".\");\n    BluetoothSerial.subscribe('\\n');\n    let data = 'This is a test string';\n    bluetoothComponent.sendData(data);\n  },\n  onDisconnect: function () {\n    alert(\"Device has been disconnected\");\n  },\n  sendData: function (data) {\n    BluetoothSerial.write(data);\n    bluetoothComponent.sendText = data;\n  },\n  listDevices: function () {\n    BluetoothSerial.list();\n  },\n  connectFailed: function () {\n    alert(\"Connection to device failed!\");\n  },\n  onError: function (errorMsg) {\n    console.log('Error: ' + errorMsg + '\\n');\n  },\n  testRender: function () {\n    let isClicked = window.localStorage.getItem(\"isClicked\");\n    let testText = window.localStorage.getItem(\"sendText\");\n    console.log(\"isClicked: \" + isClicked);\n    console.log(\"bluetoothComponent.sendText: \" + bluetoothComponent.sendText);\n\n    if (isClicked === \"true\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sentDataTest\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, \" Test: \", testText);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }\n      }, \"Test: No text available yet\");\n    }\n  }\n};\n\nconst BluetoothButton = ({\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: bluetoothComponent.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Connect to Device\")));\n};\n\nexport default BluetoothButton;","map":{"version":3,"sources":["C:/Users/Nick/Desktop/LED-Helmet-Cosplay-Companion/cosplay-companion/src/components/BluetoothButton.tsx"],"names":["React","IonButton","BluetoothSerial","bluetoothComponent","macAddress","sendText","setMAC","MAC","console","log","onClick","isClicked","window","localStorage","setItem","location","reload","init","bindEvents","document","addEventListener","connectBluetooth","connect","isEnabled","onConnect","onDisconnect","alert","subscribe","data","sendData","write","listDevices","list","connectFailed","onError","errorMsg","testRender","getItem","testText","BluetoothButton","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { IonButton } from '@ionic/react';\r\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\r\n\r\nexport let bluetoothComponent = {\r\n  macAddress: 'B8:27:EB:C8:32:3B',\r\n  sendText: \"Test\",\r\n\r\n  setMAC: function(MAC:string) {\r\n    bluetoothComponent.macAddress = MAC;\r\n    console.log(\"Given MAC Address: \" + bluetoothComponent.macAddress)\r\n  },\r\n\r\n  onClick: function() {\r\n    let isClicked = \"true\"\r\n    bluetoothComponent.sendText = 'hello world'\r\n    window.localStorage.setItem(\"sendText\", bluetoothComponent.sendText)\r\n    window.localStorage.setItem(\"isClicked\", isClicked)\r\n    window.location.reload()\r\n    bluetoothComponent.init()\r\n  },\r\n\r\n  init: function() {\r\n    console.log(\"Initializing bluetooth connection...\")\r\n    bluetoothComponent.bindEvents()\r\n  },\r\n\r\n  bindEvents: function() {\r\n    document.addEventListener('findDevice', bluetoothComponent.connectBluetooth, false)\r\n    //bluetoothComponent.connectBluetooth()\r\n  },\r\n\r\n  connectBluetooth: function() {\r\n    BluetoothSerial.connect(bluetoothComponent.macAddress)\r\n    if (BluetoothSerial.isEnabled()) {\r\n      bluetoothComponent.onConnect()\r\n    }\r\n    else {\r\n      bluetoothComponent.onDisconnect()\r\n    }\r\n  },\r\n\r\n  onConnect: function() {\r\n    alert(\"Connected to device with MAC address: \" + bluetoothComponent.macAddress + \".\")\r\n    BluetoothSerial.subscribe('\\n')\r\n    let data:string = 'This is a test string'\r\n    bluetoothComponent.sendData(data)\r\n  },\r\n\r\n  onDisconnect: function() {\r\n    alert(\"Device has been disconnected\")\r\n  },\r\n\r\n  sendData: function(data:string) {\r\n    BluetoothSerial.write(data)\r\n    bluetoothComponent.sendText = data\r\n  },\r\n\r\n  listDevices: function() {\r\n    BluetoothSerial.list()\r\n  },\r\n\r\n  connectFailed: function() {\r\n    alert(\"Connection to device failed!\")\r\n  },\r\n\r\n  onError: function(errorMsg:string) {\r\n    console.log('Error: ' + errorMsg + '\\n')\r\n  },\r\n\r\n  testRender: function() {\r\n\r\n    let isClicked = window.localStorage.getItem(\"isClicked\")\r\n    let testText = window.localStorage.getItem(\"sendText\")\r\n\r\n    console.log(\"isClicked: \" + isClicked)\r\n    console.log(\"bluetoothComponent.sendText: \" + bluetoothComponent.sendText)\r\n\r\n    if (isClicked === \"true\")\r\n    {\r\n      return( <div className=\"sentDataTest\"> Test: {testText}\r\n      </div> )\r\n    }\r\n    else\r\n    {\r\n      return ( <div>Test: No text available yet</div> )\r\n    }\r\n    \r\n  }\r\n};\r\n\r\ninterface ContainerProps {\r\n    title: string;\r\n  }\r\n  \r\n  const BluetoothButton: React.FC<ContainerProps> = ({ title }) => {   \r\n    return (\r\n      <div className=\"container\" id=\"container\">\r\n        <strong>{title}</strong>\r\n            <p>\r\n                <IonButton color=\"primary\" size=\"large\" onClick={bluetoothComponent.onClick}>Connect to Device</IonButton>\r\n            </p>\r\n      </div>\r\n    );\r\n\r\n  };\r\n  \r\n  export default BluetoothButton;"]},"metadata":{},"sourceType":"module"}