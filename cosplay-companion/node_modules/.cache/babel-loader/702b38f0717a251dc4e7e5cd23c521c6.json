{"ast":null,"code":"export var CameraSource;\n\n(function (CameraSource) {\n  CameraSource[\"Prompt\"] = \"PROMPT\";\n  CameraSource[\"Camera\"] = \"CAMERA\";\n  CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\n\nexport var CameraDirection;\n\n(function (CameraDirection) {\n  CameraDirection[\"Rear\"] = \"REAR\";\n  CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\n\nexport var CameraResultType;\n\n(function (CameraResultType) {\n  CameraResultType[\"Uri\"] = \"uri\";\n  CameraResultType[\"Base64\"] = \"base64\";\n  CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n\nexport var FilesystemDirectory;\n\n(function (FilesystemDirectory) {\n  /**\r\n   * The Documents directory\r\n   * On iOS it's the app's documents directory.\r\n   * Use this directory to store user-generated content.\r\n   * On Android it's the Public Documents folder, so it's accessible from other apps.\r\n   * It's not accesible on Android 10 unless the app enables legacy External Storage\r\n   * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\r\n   * in the `AndroidManifest.xml`\r\n   */\n  FilesystemDirectory[\"Documents\"] = \"DOCUMENTS\";\n  /**\r\n   * The Data directory\r\n   * On iOS it will use the Documents directory\r\n   * On Android it's the directory holding application files.\r\n   * Files will be deleted when the application is uninstalled.\r\n   */\n\n  FilesystemDirectory[\"Data\"] = \"DATA\";\n  /**\r\n   * The Cache directory\r\n   * Can be deleted in cases of low memory, so use this directory to write app-specific files\r\n   * that your app can re-create easily.\r\n   */\n\n  FilesystemDirectory[\"Cache\"] = \"CACHE\";\n  /**\r\n   * The external directory\r\n   * On iOS it will use the Documents directory\r\n   * On Android it's the directory on the primary shared/external\r\n   * storage device where the application can place persistent files it owns.\r\n   * These files are internal to the applications, and not typically visible\r\n   * to the user as media.\r\n   * Files will be deleted when the application is uninstalled.\r\n   */\n\n  FilesystemDirectory[\"External\"] = \"EXTERNAL\";\n  /**\r\n   * The external storage directory\r\n   * On iOS it will use the Documents directory\r\n   * On Android it's the primary shared/external storage directory.\r\n   * It's not accesible on Android 10 unless the app enables legacy External Storage\r\n   * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\r\n   * in the `AndroidManifest.xml`\r\n   */\n\n  FilesystemDirectory[\"ExternalStorage\"] = \"EXTERNAL_STORAGE\";\n})(FilesystemDirectory || (FilesystemDirectory = {}));\n\nexport var FilesystemEncoding;\n\n(function (FilesystemEncoding) {\n  FilesystemEncoding[\"UTF8\"] = \"utf8\";\n  FilesystemEncoding[\"ASCII\"] = \"ascii\";\n  FilesystemEncoding[\"UTF16\"] = \"utf16\";\n})(FilesystemEncoding || (FilesystemEncoding = {}));\n\nexport var HapticsImpactStyle;\n\n(function (HapticsImpactStyle) {\n  HapticsImpactStyle[\"Heavy\"] = \"HEAVY\";\n  HapticsImpactStyle[\"Medium\"] = \"MEDIUM\";\n  HapticsImpactStyle[\"Light\"] = \"LIGHT\";\n})(HapticsImpactStyle || (HapticsImpactStyle = {}));\n\nexport var HapticsNotificationType;\n\n(function (HapticsNotificationType) {\n  HapticsNotificationType[\"SUCCESS\"] = \"SUCCESS\";\n  HapticsNotificationType[\"WARNING\"] = \"WARNING\";\n  HapticsNotificationType[\"ERROR\"] = \"ERROR\";\n})(HapticsNotificationType || (HapticsNotificationType = {}));\n\nexport var KeyboardStyle;\n\n(function (KeyboardStyle) {\n  KeyboardStyle[\"Dark\"] = \"DARK\";\n  KeyboardStyle[\"Light\"] = \"LIGHT\";\n})(KeyboardStyle || (KeyboardStyle = {}));\n\nexport var KeyboardResize;\n\n(function (KeyboardResize) {\n  KeyboardResize[\"Body\"] = \"body\";\n  KeyboardResize[\"Ionic\"] = \"ionic\";\n  KeyboardResize[\"Native\"] = \"native\";\n  KeyboardResize[\"None\"] = \"none\";\n})(KeyboardResize || (KeyboardResize = {}));\n\nexport var ActionSheetOptionStyle;\n\n(function (ActionSheetOptionStyle) {\n  ActionSheetOptionStyle[\"Default\"] = \"DEFAULT\";\n  ActionSheetOptionStyle[\"Destructive\"] = \"DESTRUCTIVE\";\n  ActionSheetOptionStyle[\"Cancel\"] = \"CANCEL\";\n})(ActionSheetOptionStyle || (ActionSheetOptionStyle = {})); //\n\n\nexport var PermissionType;\n\n(function (PermissionType) {\n  PermissionType[\"Camera\"] = \"camera\";\n  PermissionType[\"Photos\"] = \"photos\";\n  PermissionType[\"Geolocation\"] = \"geolocation\";\n  PermissionType[\"Notifications\"] = \"notifications\";\n  PermissionType[\"ClipboardRead\"] = \"clipboard-read\";\n  PermissionType[\"ClipboardWrite\"] = \"clipboard-write\";\n  PermissionType[\"Microphone\"] = \"microphone\";\n})(PermissionType || (PermissionType = {}));\n\nexport var PhotosAlbumType;\n\n(function (PhotosAlbumType) {\n  /**\r\n   * Album is a \"smart\" album (such as Favorites or Recently Added)\r\n   */\n  PhotosAlbumType[\"Smart\"] = \"smart\";\n  /**\r\n   * Album is a cloud-shared album\r\n   */\n\n  PhotosAlbumType[\"Shared\"] = \"shared\";\n  /**\r\n   * Album is a user-created album\r\n   */\n\n  PhotosAlbumType[\"User\"] = \"user\";\n})(PhotosAlbumType || (PhotosAlbumType = {}));\n\nexport var StatusBarStyle;\n\n(function (StatusBarStyle) {\n  /**\r\n   * Light text for dark backgrounds.\r\n   */\n  StatusBarStyle[\"Dark\"] = \"DARK\";\n  /**\r\n   * Dark text for light backgrounds.\r\n   */\n\n  StatusBarStyle[\"Light\"] = \"LIGHT\";\n})(StatusBarStyle || (StatusBarStyle = {}));\n\nexport var StatusBarAnimation;\n\n(function (StatusBarAnimation) {\n  /**\r\n   * No animation during show/hide.\r\n   */\n  StatusBarAnimation[\"None\"] = \"NONE\";\n  /**\r\n   * Slide animation during show/hide.\r\n   */\n\n  StatusBarAnimation[\"Slide\"] = \"SLIDE\";\n  /**\r\n   * Fade animation during show/hide.\r\n   */\n\n  StatusBarAnimation[\"Fade\"] = \"FADE\";\n})(StatusBarAnimation || (StatusBarAnimation = {}));","map":{"version":3,"sources":["../../src/core-plugin-definitions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export var CameraSource;\r\n(function (CameraSource) {\r\n    CameraSource[\"Prompt\"] = \"PROMPT\";\r\n    CameraSource[\"Camera\"] = \"CAMERA\";\r\n    CameraSource[\"Photos\"] = \"PHOTOS\";\r\n})(CameraSource || (CameraSource = {}));\r\nexport var CameraDirection;\r\n(function (CameraDirection) {\r\n    CameraDirection[\"Rear\"] = \"REAR\";\r\n    CameraDirection[\"Front\"] = \"FRONT\";\r\n})(CameraDirection || (CameraDirection = {}));\r\nexport var CameraResultType;\r\n(function (CameraResultType) {\r\n    CameraResultType[\"Uri\"] = \"uri\";\r\n    CameraResultType[\"Base64\"] = \"base64\";\r\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\r\n})(CameraResultType || (CameraResultType = {}));\r\nexport var FilesystemDirectory;\r\n(function (FilesystemDirectory) {\r\n    /**\r\n     * The Documents directory\r\n     * On iOS it's the app's documents directory.\r\n     * Use this directory to store user-generated content.\r\n     * On Android it's the Public Documents folder, so it's accessible from other apps.\r\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\r\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\r\n     * in the `AndroidManifest.xml`\r\n     */\r\n    FilesystemDirectory[\"Documents\"] = \"DOCUMENTS\";\r\n    /**\r\n     * The Data directory\r\n     * On iOS it will use the Documents directory\r\n     * On Android it's the directory holding application files.\r\n     * Files will be deleted when the application is uninstalled.\r\n     */\r\n    FilesystemDirectory[\"Data\"] = \"DATA\";\r\n    /**\r\n     * The Cache directory\r\n     * Can be deleted in cases of low memory, so use this directory to write app-specific files\r\n     * that your app can re-create easily.\r\n     */\r\n    FilesystemDirectory[\"Cache\"] = \"CACHE\";\r\n    /**\r\n     * The external directory\r\n     * On iOS it will use the Documents directory\r\n     * On Android it's the directory on the primary shared/external\r\n     * storage device where the application can place persistent files it owns.\r\n     * These files are internal to the applications, and not typically visible\r\n     * to the user as media.\r\n     * Files will be deleted when the application is uninstalled.\r\n     */\r\n    FilesystemDirectory[\"External\"] = \"EXTERNAL\";\r\n    /**\r\n     * The external storage directory\r\n     * On iOS it will use the Documents directory\r\n     * On Android it's the primary shared/external storage directory.\r\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\r\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\r\n     * in the `AndroidManifest.xml`\r\n     */\r\n    FilesystemDirectory[\"ExternalStorage\"] = \"EXTERNAL_STORAGE\";\r\n})(FilesystemDirectory || (FilesystemDirectory = {}));\r\nexport var FilesystemEncoding;\r\n(function (FilesystemEncoding) {\r\n    FilesystemEncoding[\"UTF8\"] = \"utf8\";\r\n    FilesystemEncoding[\"ASCII\"] = \"ascii\";\r\n    FilesystemEncoding[\"UTF16\"] = \"utf16\";\r\n})(FilesystemEncoding || (FilesystemEncoding = {}));\r\nexport var HapticsImpactStyle;\r\n(function (HapticsImpactStyle) {\r\n    HapticsImpactStyle[\"Heavy\"] = \"HEAVY\";\r\n    HapticsImpactStyle[\"Medium\"] = \"MEDIUM\";\r\n    HapticsImpactStyle[\"Light\"] = \"LIGHT\";\r\n})(HapticsImpactStyle || (HapticsImpactStyle = {}));\r\nexport var HapticsNotificationType;\r\n(function (HapticsNotificationType) {\r\n    HapticsNotificationType[\"SUCCESS\"] = \"SUCCESS\";\r\n    HapticsNotificationType[\"WARNING\"] = \"WARNING\";\r\n    HapticsNotificationType[\"ERROR\"] = \"ERROR\";\r\n})(HapticsNotificationType || (HapticsNotificationType = {}));\r\nexport var KeyboardStyle;\r\n(function (KeyboardStyle) {\r\n    KeyboardStyle[\"Dark\"] = \"DARK\";\r\n    KeyboardStyle[\"Light\"] = \"LIGHT\";\r\n})(KeyboardStyle || (KeyboardStyle = {}));\r\nexport var KeyboardResize;\r\n(function (KeyboardResize) {\r\n    KeyboardResize[\"Body\"] = \"body\";\r\n    KeyboardResize[\"Ionic\"] = \"ionic\";\r\n    KeyboardResize[\"Native\"] = \"native\";\r\n    KeyboardResize[\"None\"] = \"none\";\r\n})(KeyboardResize || (KeyboardResize = {}));\r\nexport var ActionSheetOptionStyle;\r\n(function (ActionSheetOptionStyle) {\r\n    ActionSheetOptionStyle[\"Default\"] = \"DEFAULT\";\r\n    ActionSheetOptionStyle[\"Destructive\"] = \"DESTRUCTIVE\";\r\n    ActionSheetOptionStyle[\"Cancel\"] = \"CANCEL\";\r\n})(ActionSheetOptionStyle || (ActionSheetOptionStyle = {}));\r\n//\r\nexport var PermissionType;\r\n(function (PermissionType) {\r\n    PermissionType[\"Camera\"] = \"camera\";\r\n    PermissionType[\"Photos\"] = \"photos\";\r\n    PermissionType[\"Geolocation\"] = \"geolocation\";\r\n    PermissionType[\"Notifications\"] = \"notifications\";\r\n    PermissionType[\"ClipboardRead\"] = \"clipboard-read\";\r\n    PermissionType[\"ClipboardWrite\"] = \"clipboard-write\";\r\n    PermissionType[\"Microphone\"] = \"microphone\";\r\n})(PermissionType || (PermissionType = {}));\r\nexport var PhotosAlbumType;\r\n(function (PhotosAlbumType) {\r\n    /**\r\n     * Album is a \"smart\" album (such as Favorites or Recently Added)\r\n     */\r\n    PhotosAlbumType[\"Smart\"] = \"smart\";\r\n    /**\r\n     * Album is a cloud-shared album\r\n     */\r\n    PhotosAlbumType[\"Shared\"] = \"shared\";\r\n    /**\r\n     * Album is a user-created album\r\n     */\r\n    PhotosAlbumType[\"User\"] = \"user\";\r\n})(PhotosAlbumType || (PhotosAlbumType = {}));\r\nexport var StatusBarStyle;\r\n(function (StatusBarStyle) {\r\n    /**\r\n     * Light text for dark backgrounds.\r\n     */\r\n    StatusBarStyle[\"Dark\"] = \"DARK\";\r\n    /**\r\n     * Dark text for light backgrounds.\r\n     */\r\n    StatusBarStyle[\"Light\"] = \"LIGHT\";\r\n})(StatusBarStyle || (StatusBarStyle = {}));\r\nexport var StatusBarAnimation;\r\n(function (StatusBarAnimation) {\r\n    /**\r\n     * No animation during show/hide.\r\n     */\r\n    StatusBarAnimation[\"None\"] = \"NONE\";\r\n    /**\r\n     * Slide animation during show/hide.\r\n     */\r\n    StatusBarAnimation[\"Slide\"] = \"SLIDE\";\r\n    /**\r\n     * Fade animation during show/hide.\r\n     */\r\n    StatusBarAnimation[\"Fade\"] = \"FADE\";\r\n})(StatusBarAnimation || (StatusBarAnimation = {}));\r\n//# sourceMappingURL=core-plugin-definitions.js.map"]},"metadata":{},"sourceType":"module"}